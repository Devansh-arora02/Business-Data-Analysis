{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1Kup1_Gshi4H3RTMi9_toE835npJf61H_","authorship_tag":"ABX9TyOe30Fu9Kor44nzBcyymuXQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lxqUaaC4DoMh","executionInfo":{"status":"ok","timestamp":1734960473600,"user_tz":-330,"elapsed":12108,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"0c75c3f3-17a7-4000-a8c1-779c2476a29b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.cluster import KMeans\n","from sklearn.impute import SimpleImputer\n","\n","# Load data\n","df = pd.read_csv('/content/drive/MyDrive/BDM Capstone/combined_files.csv')\n","\n","# Convert 'BillDate' to datetime\n","df['BillDate'] = pd.to_datetime(df['BillDate'], dayfirst=True)\n","\n","# Creating loyalty features\n","df['YearMonth'] = df['BillDate'].dt.to_period('M')\n","monthly_spending = df.groupby(['CustomerCode', 'YearMonth']).agg({'Profit': 'sum'}).reset_index()\n","frequency = monthly_spending.groupby('CustomerCode').size().reset_index(name='Frequency')\n","total_spend = df.groupby('CustomerCode')['Profit'].sum().reset_index()\n","first_last_visit = df.groupby('CustomerCode')['BillDate'].agg(first_visit='min', last_visit='max').reset_index()\n","first_last_visit['Longevity'] = (first_last_visit['last_visit'] - first_last_visit['first_visit']).dt.days\n","\n","# Merging features\n","loyalty_df = pd.merge(frequency, total_spend, on='CustomerCode')\n","loyalty_df = pd.merge(loyalty_df, first_last_visit[['CustomerCode', 'Longevity']], on='CustomerCode')\n","\n","# Prioritize EXISTING over NEW for each customer\n","# If a customer is tagged as both NEW and EXISTING, we will retain 'EXISTING'\n","df['New customer Type'] = df['New customer Type'].map({'NEW': 0, 'EXISTING': 1})\n","\n","# Group by CustomerCode to ensure 'EXISTING' (1) is retained if it exists\n","df_priority = df.groupby('CustomerCode')['New customer Type'].max().reset_index()\n","\n","# Merge the priority customer type into the loyalty_df DataFrame\n","loyalty_df = pd.merge(loyalty_df, df_priority, on='CustomerCode', how='left')\n","\n","# Preprocessing\n","imputer = SimpleImputer(strategy='mean')\n","scaler = StandardScaler()\n","features = ['Frequency', 'Profit', 'Longevity', 'New customer Type']\n","loyalty_df[features] = imputer.fit_transform(loyalty_df[features])\n","loyalty_df_scaled = scaler.fit_transform(loyalty_df[features])\n","\n","# Clustering\n","kmeans = KMeans(3)\n","loyalty_df['Cluster'] = kmeans.fit_predict(loyalty_df_scaled)\n","\n","# Analyzing clusters\n","mean_values = loyalty_df.groupby('Cluster')[['Frequency', 'Profit', 'Longevity', 'New customer Type']].mean()\n","print(mean_values)\n","loyalty_df['New customer Type'] = loyalty_df['New customer Type'].map({0: \"NEW\", 1: \"EXISTING\"})\n","\n","# Save or print results\n","# loyalty_df.to_csv('/content/drive/MyDrive/BDM Capstone/loyalty_clusters.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xqWmlhZvnomT","executionInfo":{"status":"ok","timestamp":1727849327487,"user_tz":-330,"elapsed":731,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"38c65487-6d0d-4fa4-9eb5-86c80781d90d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         Frequency         Profit   Longevity  New customer Type\n","Cluster                                                         \n","0         1.000000    9067.787876    0.000000                0.0\n","1         5.377049  163094.352394  245.163934                1.0\n","2         1.358575   19590.165613   20.440980                1.0\n"]}]},{"cell_type":"code","source":["print(loyalty_df['Cluster'].value_counts())"],"metadata":{"id":"7hAQqEK9Eyed","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1727849328069,"user_tz":-330,"elapsed":7,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"dff085ea-cc18-4f6d-dcc4-36366fb172fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cluster\n","0    497\n","2    449\n","1     61\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.decomposition import PCA\n","\n","# Apply PCA to reduce the dimensionality to 2 components\n","pca = PCA(n_components=2)\n","pca_components = pca.fit_transform(loyalty_df_scaled)\n","\n","# Create a DataFrame with the PCA results and clusters\n","loyalty_df['PCA1'] = pca_components[:, 0]\n","loyalty_df['PCA2'] = pca_components[:, 1]\n","\n","# Create a scatter plot\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x='PCA1', y='PCA2', hue='Cluster', data=loyalty_df, palette='viridis', s=100)\n","\n","# Add plot title and labels\n","plt.title('Customer Segmentation Clusters (PCA)')\n","plt.xlabel('PCA Component 1')\n","plt.ylabel('PCA Component 2')\n","plt.legend(title='Cluster')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"vkdA5lxi1khY","executionInfo":{"status":"ok","timestamp":1727849328704,"user_tz":-330,"elapsed":640,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"972fdb22-bee5-49d3-9b6b-cbf89ea24547"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Set the figure size for multiple plots\n","plt.figure(figsize=(16, 12))\n","\n","# 1. Box plot for Frequency across clusters\n","plt.subplot(2, 2, 1)\n","sns.boxplot(x='Cluster', y='Frequency', data=loyalty_df, palette='viridis')\n","plt.title('Number of visits per Cluster')\n","plt.xlabel('Cluster')\n","plt.ylabel('Number of visits')\n","\n","# 2. Violin plot for Profit across clusters\n","plt.subplot(2, 2, 2)\n","sns.violinplot(x='Cluster', y='Profit', data=loyalty_df, palette='coolwarm')\n","plt.title('Profit Distribution per Cluster')\n","plt.xlabel('Cluster')\n","plt.ylabel('Profit')\n","\n","# 3. Bar plot for Longevity (average) across clusters\n","plt.subplot(2, 2, 3)\n","avg_longevity = loyalty_df.groupby('Cluster')['Longevity'].mean().reset_index()\n","sns.barplot(x='Cluster', y='Longevity', data=avg_longevity, palette='magma')\n","plt.title('Average Longevity per Cluster')\n","plt.xlabel('Cluster')\n","plt.ylabel('Average Longevity (days)')\n","\n","# 4. Stacked bar plot for New vs Existing Customers across clusters\n","plt.subplot(2, 2, 4)\n","new_existing = loyalty_df.groupby(['Cluster', 'New customer Type']).size().unstack().fillna(0)\n","new_existing.plot(kind='bar', stacked=True, colormap='cividis', ax=plt.gca())\n","plt.title('New vs Existing Customers per Cluster')\n","plt.xlabel('Cluster')\n","plt.ylabel('Count')\n","plt.legend(['New Customer', 'Existing Customer'], title='Customer Type')\n","plt.xticks(rotation=0)\n","\n","# Show the plot\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"DpQlrz4x3b9M","executionInfo":{"status":"ok","timestamp":1727849330395,"user_tz":-330,"elapsed":1709,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"895877e6-5c83-44c8-9574-653dbdc6ad5c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-30-5b462ec81df5>:9: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.boxplot(x='Cluster', y='Frequency', data=loyalty_df, palette='viridis')\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py:640: FutureWarning: SeriesGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n","  positions = grouped.grouper.result_index.to_numpy(dtype=float)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py:640: FutureWarning: SeriesGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n","  positions = grouped.grouper.result_index.to_numpy(dtype=float)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py:640: FutureWarning: SeriesGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n","  positions = grouped.grouper.result_index.to_numpy(dtype=float)\n","<ipython-input-30-5b462ec81df5>:16: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.violinplot(x='Cluster', y='Profit', data=loyalty_df, palette='coolwarm')\n","<ipython-input-30-5b462ec81df5>:24: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x='Cluster', y='Longevity', data=avg_longevity, palette='magma')\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 4 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABjUAAASlCAYAAADgeltjAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd3hUVf7H8c9MyqQSekJCJKEXkSKLgkgNUhRxkSpKUXH9CYuAusq60lYFC8qqKJYVBBtYEEGlSBELKkVQeu+EnoQkpM79/SEzS0gCSZjJncm8X8+TJ3PP3HvPd0KAe+cz5xyLYRiGAAAAAAAAAAAAPJzV7AIAAAAAAAAAAACKglADAAAAAAAAAAB4BUINAAAAAAAAAADgFQg1AAAAAAAAAACAVyDUAAAAAAAAAAAAXoFQAwAAAAAAAAAAeAVCDQAAAAAAAAAA4BUINQAAAAAAAAAAgFcg1AAAAAAAAAAAAF6BUAMASsmqVatksVj06aefml1KkRw/fly9e/dWpUqVZLFYNG3atKs63/79+2WxWDRr1qxiHde+fXu1b9/+qvouaxy/S6tWrTK7FAAAALhATk6O/vGPfyg2NlZWq1V33HGHJMlisWjChAmlWktpXn9f+vomTJggi8WiU6dOlUr/cXFxGjJkSKn05e3M+F0EgMIQagAoU2bNmiWLxaKgoCAdOXIk3/Pt27fXtddea0Jl3mf06NFasmSJxo4dqzlz5qhr165mlyRJOnr0qCZMmKCNGzeaXYpbzJ8/X926dVPlypUVGBio6Oho9e3bVytWrCi1Gn766SdNmDBBSUlJpdYnAACAp3HcWzi+goKCVLduXY0YMULHjx93aV/vvvuuXnjhBfXu3VvvvfeeRo8eXeB+xb1OGzJkSJ7XEBYWppo1a6p379767LPPZLfbXVK/J18/enJtnmDjxo26++67FRsbK5vNpooVKyohIUEzZ85Ubm5uqdRQ1u/xALiev9kFAIA7ZGZmasqUKXr11VfNLsVrrVixQj179tSjjz7qkvPVqFFD58+fV0BAQLGOW7p0aZ7to0ePauLEiYqLi1PTpk1dUpsnMAxD9957r2bNmqVmzZppzJgxioqK0rFjxzR//nx16tRJP/74o1q3bu32Wn766SdNnDhRQ4YMUfny5d3eHwAAgCebNGmS4uPjlZGRoR9++EFvvPGGvv76a23evFkhISEu6WPFihWKiYnRyy+/nKf9/Pnz8vf/31s3JblOs9lseuedd5znO3DggBYuXKjevXurffv2WrBggcqVK+fc/9Lr76Io6fXjpa/PHS5X244dO2S1+u7nfd955x09+OCDioyM1D333KM6dero3LlzWr58ue677z4dO3ZM//znP91eR1m9xwPgPoQaAMqkpk2b6u2339bYsWMVHR1tdjmlKi0tTaGhoVd9nhMnTrj0DW3Hp9uKKzAw0GU1mMlutysrK6vQn8HUqVM1a9YsjRo1Si+99JIsFovzuSeffFJz5sxx+w2fu6Wnp7vsxh8AAKC0dOvWTS1atJAk3X///apUqZJeeuklLViwQAMGDCjwmOJekxd27V2S6+dL+fv76+67787T9vTTT2vKlCkaO3ashg0bprlz5zqfc/f198XXxa54fVfDZrOZ2r+7Xe76++eff9aDDz6oVq1a6euvv1Z4eLjzuVGjRmndunXavHlzaZXqFq66NwbgeXw3jgZQpv3zn/9Ubm6upkyZctn9LrfOQ2Hzu+7cuVN33323IiIiVKVKFT311FMyDEOHDh1Sz549Va5cOUVFRWnq1KkF9pmbm6t//vOfioqKUmhoqG6//XYdOnQo336//PKLunbtqoiICIWEhKhdu3b68ccf8+zjqGnr1q266667VKFCBbVp0+ayr3nv3r3q06ePKlasqJCQEN1444366quvnM87htkbhqHp06c7h6oXJDs7WxUrVtTQoUPzPZeSkqKgoCDnSI+CftaJiYkaOnSoqlevLpvNpmrVqqlnz57av3+/c5+L5/RdtWqV/vKXv0iShg4d6qzNcc5du3bpzjvvVFRUlIKCglS9enX1799fycnJl/2ZOKYlW79+vVq3bq3g4GDFx8drxowZ+fbNzMzU+PHjVbt2bdlsNsXGxuof//iHMjMz8+xnsVg0YsQIffDBB2rUqJFsNpsWL15cYP/nz5/X5MmTVb9+fb344osF/rzvuecetWzZstDXUNh8wAXNifzqq6+qUaNGCgkJUYUKFdSiRQt9+OGHkv78nXrsscckSfHx8c6f8cV/Ju+//76uv/56BQcHq2LFiurfv3++3+GLf6Zt27ZVSEhIqXzKCwAAwN06duwoSdq3b5+kP6d4CgsL0549e9S9e3eFh4dr4MCBkv58U/WRRx5xTu1Tr149vfjiizIMQ9L/rpFXrlypLVu2OK+9HGunXXxPUpTrtOJ44okndMstt+iTTz7Rzp07ne2uvn683HVxYes0nDp1Sn379lW5cuVUqVIlPfzww8rIyHA+X9T7uCvVVtA19JXul6T/rXE3b948PfPMM6pevbqCgoLUqVMn7d69u9CfuYPjPm779u2XfZ0O7rj+njhxoiwWiz744IM8gYZDixYtLrveyJAhQxQXF1foa7vYsmXL1KZNG5UvX15hYWGqV6+es7Yr3eNJ7rs3BuC9vPsjnwBQiPj4eA0aNEhvv/22nnjiCZeO1ujXr58aNGigKVOm6KuvvtLTTz+tihUr6s0331THjh313HPP6YMPPtCjjz6qv/zlL2rbtm2e45955hlZLBY9/vjjOnHihKZNm6aEhARt3LhRwcHBkv4cft6tWzddf/31Gj9+vKxWq2bOnKmOHTvq+++/z/fmdp8+fVSnTh09++yzzhukghw/flytW7dWenq6Ro4cqUqVKum9997T7bffrk8//VR//etf1bZtW82ZM0f33HOPOnfurEGDBhV6voCAAP31r3/V559/rjfffDPPp7q++OILZWZmqn///oUef+edd2rLli36+9//rri4OJ04cULLli3TwYMHC7xAbtCggSZNmqRx48bpgQce0M033yxJat26tbKystSlSxdlZmbq73//u6KionTkyBEtWrRISUlJioiIKLQOSTp79qy6d++uvn37asCAAZo3b57+7//+T4GBgbr33nsl/fmpsttvv10//PCDHnjgATVo0EB//PGHXn75Ze3cuVNffPFFnnOuWLFC8+bN04gRI1S5cuUCX5Mk/fDDDzpz5oxGjRolPz+/y9Z5td5++22NHDlSvXv3dt40/f777/rll1901113qVevXtq5c6c++ugjvfzyy6pcubIkqUqVKpL+/P196qmn1LdvX91///06efKkXn31VbVt21a//fZbnk8Ynj59Wt26dVP//v119913KzIy0q2vDQAAoDTs2bNHklSpUiVnW05Ojrp06aI2bdroxRdfVEhIiAzD0O23366VK1fqvvvuU9OmTbVkyRI99thjOnLkiF5++WVVqVJFc+bM0TPPPKPU1FRNnjxZ0p/XvZe60nVaSdxzzz1aunSpli1bprp16xa4z9VeP0pFvy526Nu3r+Li4jR58mT9/PPPeuWVV3T27FnNnj27WK+vuD+zotwvXWzKlCmyWq169NFHlZycrOeff14DBw7UL7/8UqT6ivI63XH9nZ6eruXLl6tt27a65pprilRrSW3ZskW33XabrrvuOk2aNEk2m027d+92hhKXu8eT3HdvDMDLGQBQhsycOdOQZKxdu9bYs2eP4e/vb4wcOdL5fLt27YxGjRo5t/ft22dIMmbOnJnvXJKM8ePHO7fHjx9vSDIeeOABZ1tOTo5RvXp1w2KxGFOmTHG2nz171ggODjYGDx7sbFu5cqUhyYiJiTFSUlKc7fPmzTMkGf/5z38MwzAMu91u1KlTx+jSpYtht9ud+6Wnpxvx8fFG586d89U0YMCAIv18Ro0aZUgyvv/+e2fbuXPnjPj4eCMuLs7Izc3N8/qHDx9+xXMuWbLEkGQsXLgwT3v37t2NmjVrOrcv/VmfPXvWkGS88MILlz1/u3btjHbt2jm3165dW+Cf2W+//WZIMj755JMr1lxQH5KMqVOnOtsyMzONpk2bGlWrVjWysrIMwzCMOXPmGFarNc/PzzAMY8aMGYYk48cff3S2STKsVquxZcuWK/b/n//8x5BkzJ8/v0j1On6XVq5c6WyrUaNGnt+3i1/bxT+/nj175vk7UJAXXnjBkGTs27cvT/v+/fsNPz8/45lnnsnT/scffxj+/v552h0/0xkzZhTpNQEAAHgax73Ft99+a5w8edI4dOiQ8fHHHxuVKlUygoODjcOHDxuGYRiDBw82JBlPPPFEnuO/+OILQ5Lx9NNP52nv3bu3YbFYjN27dzvbLr1Pcbj0nqSw67TCDB482AgNDS30ecc19OjRo/PU4qrrR8drKOy6uLB7rttvvz3Pfg899JAhydi0aZNhGMW7j7tcbZdeQxf1fslxPd6gQQMjMzPTua/juv6PP/7I19fFivo63XX9vWnTJkOS8fDDD19xX4dLf66DBw82atSoUehrc3j55ZcNScbJkycLPXdh93juvDcG4N2YfgpAmVWzZk3dc889euutt3Ts2DGXnff+++93Pvbz81OLFi1kGIbuu+8+Z3v58uVVr1497d27N9/xgwYNyjO8t3fv3qpWrZq+/vprSdLGjRu1a9cu3XXXXTp9+rROnTqlU6dOKS0tTZ06ddLq1atlt9vznPPBBx8sUu1ff/21WrZsmWcYblhYmB544AHt379fW7duLdoP4SIdO3ZU5cqV88zDe/bsWS1btkz9+vUr9Ljg4GAFBgZq1apVOnv2bLH7vZRjJMaSJUuUnp5e7OP9/f31t7/9zbkdGBiov/3tbzpx4oTWr18vSfrkk0/UoEED1a9f3/nncurUKecUBCtXrsxzznbt2qlhw4ZX7DslJUWSChz27Wrly5fX4cOHtXbt2mIf+/nnn8tut6tv3755Xn9UVJTq1KmT7/XbbLYCpyYDAADwJgkJCapSpYpiY2PVv39/hYWFaf78+YqJicmz3//93//l2f7666/l5+enkSNH5ml/5JFHZBiGvvnmG7fXfiVhYWGSpHPnzhW6z9VcPzoU9brYYfjw4Xm2//73v0uS857JXYp7vzR06NA8o9UdowwKug8syJVep7uuv0v7/kOSFixYkO8+9krceW8MwLsRagAo0/71r38pJyfnimtrFMelw3MjIiIUFBTkHMp8cXtBb9bXqVMnz7bFYlHt2rWd87ru2rVLkjR48GBVqVIlz9c777yjzMzMfGtExMfHF6n2AwcOqF69evnaHcPbDxw4UKTzXMzf31933nmnFixY4FxX4vPPP1d2dvZlQw2bzabnnntO33zzjSIjI9W2bVs9//zzSkxMLHYN0p8/gzFjxuidd95R5cqV1aVLF02fPv2K62k4REdH51tEzjEE/+I/my1btuT7c3Hsd+LEiXw1FUW5cuUkXf5m0lUef/xxhYWFqWXLlqpTp46GDx+ebz7awuzatUuGYahOnTr5fgbbtm3L9/pjYmLKzELvAOAKq1evVo8ePRQdHS2LxZJv2sKiMAxDL774ourWrSubzaaYmBg988wzri8WgNP06dO1bNkyrVy5Ulu3btXevXvVpUuXPPv4+/urevXqedoOHDig6OjofG8cX821t6ulpqZKuvyb21dz/ehQ1Otih0vvmWrVqiWr1Vri9UOKqrj3S5feG1aoUEGSivyhrSu9Tnddf5fm/Ue/fv1000036f7771dkZKT69++vefPmFSngcOe9MQDvxpoaAMq0mjVr6u6779Zbb72lJ554It/zhS2AnZubW+g5C1rzoLB1EIwSzOHpuLh74YUX1LRp0wL3cXyiysGxFodZ+vfvrzfffFPffPON7rjjDs2bN0/169dXkyZNLnvcqFGj1KNHD33xxRdasmSJnnrqKU2ePFkrVqxQs2bNil3H1KlTNWTIEC1YsEBLly7VyJEjnfPTXnqTWRJ2u12NGzfWSy+9VODzsbGxebaL+udSv359SdIff/yhO+64o0S1Xe53+eLfzwYNGmjHjh1atGiRFi9erM8++0yvv/66xo0bp4kTJ162D7vdLovFom+++abA33lP+70EAE+TlpamJk2a6N5771WvXr1KdI6HH35YS5cu1YsvvqjGjRvrzJkzOnPmjIsrBXCxli1bqkWLFpfdx2azyWr1vs+Nbt68WZJUu3btQve5mutHh6u9Lrz0Wrck93Hu4Mr7QCn/63LX9Xft2rXl7++vP/74o0R1FlSrw6V/BsHBwVq9erVWrlypr776SosXL9bcuXPVsWNHLV269LJrCnrjvTGA0kGoAaDM+9e//qX3339fzz33XL7nHJ+kSUpKytPuzk9NOT5t4mAYhnbv3q3rrrtO0p+fzpH+/PRMQkKCS/uuUaOGduzYka99+/btzudLom3btqpWrZrmzp2rNm3aaMWKFXryySeLdGytWrX0yCOP6JFHHtGuXbvUtGlTTZ06Ve+//36B+xd28ezQuHFjNW7cWP/617/0008/6aabbtKMGTP09NNPX/a4o0ePKi0tLc9ojZ07d0qScyHDWrVqadOmTerUqdMV6yiONm3aqEKFCvroo4/0z3/+s0SLhVeoUCHf77H05+9yzZo187SFhoaqX79+6tevn7KystSrVy8988wzGjt2rIKCggp9bbVq1ZJhGIqPjy90IUkAQOG6deumbt26Ffp8ZmamnnzySX300UdKSkrStddeq+eee07t27eXJG3btk1vvPGGNm/e7PwkMZ9IBTxXjRo19O233+rcuXN5RkJczbW3K69BJWnOnDmyWCzq3LnzZfcr6fVjSe3atSvPv2+7d++W3W53XpcX5z6uOLW5636pMFd6ne66/g4JCVHHjh21YsUKHTp0KN+Hs4ricvcfl7JarerUqZM6deqkl156Sc8++6yefPJJrVy5UgkJCZe9/5Dcc28MwLt538cIAKCYatWqpbvvvltvvvlmvqmNypUrp8qVK2v16tV52l9//XW31TN79uw8w3w//fRTHTt2zPkmx/XXX69atWrpxRdfdA4Hv9jJkydL3Hf37t3166+/as2aNc62tLQ0vfXWW4qLiyvWPLcXs1qt6t27txYuXKg5c+YoJyfnslNPSVJ6eroyMjLytNWqVUvh4eHOaawK4ggd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ajBSAwA8j0tDDavVesX/NCwWi3JyclzZLQAAAAAAAKDU1FSXTT0l/S/USE1lzTkA8BQuDTXmz59f6HNr1qzRK6+8Irvd7souAQAAAAAAANntdqWmpio6Otpl5wwJCZEknTt3zmXnBABcHZeGGj179szXtmPHDj3xxBNauHChBg4cqEmTJrmySwAAAAAAAEBpaWkyDMMZRLhCQECAAgICCDUAwINY3XXio0ePatiwYWrcuLFycnK0ceNGvffee6pRo4a7ugQAAACAK5o+fbri4uIUFBSkG264Qb/++muRjvv4449lsVh0xx13uLdAAECJOIIHV4YajvMRagCA53B5qJGcnKzHH39ctWvX1pYtW7R8+XItXLhQ1157rau7AgAAAIBimTt3rsaMGaPx48drw4YNatKkibp06aITJ05c9rj9+/fr0Ucf1c0331xKlQIAisvdoYZhGC49LwCgZFwaajz//POqWbOmFi1apI8++kg//fQTF/0AAAAAPMZLL72kYcOGaejQoWrYsKFmzJihkJAQvfvuu4Uek5ubq4EDB2rixImqWbNmKVYLACiOpKQkSVJYWJhLzxsWFqbc3FwWCwcAD+HSNTWeeOIJBQcHq3bt2nrvvff03nvvFbjf559/7spuAQAAAOCKsrKytH79eo0dO9bZZrValZCQoDVr1hR63KRJk1S1alXdd999+v7776/YT2ZmpjIzM53bKSkpV1c4AKBIzpw5I0kKd3GoER4e7jy/4zEAwDwuDTUGDRoki8XiylMCAAAAgEucOnVKubm5ioyMzNMeGRmp7du3F3jMDz/8oP/+97/auHFjkfuZPHmyJk6ceDWlAgBK4OzZs5Lk8uDBcb6zZ8+yViwAeACXhhqzZs1y5ekAAAAAwDTnzp3TPffco7fffluVK1cu8nFjx47VmDFjnNspKSmKjY11R4kAgIs4Qg1XTz9V7qJQAwBgPpeGGgAAAADgqSpXriw/Pz8dP348T/vx48cVFRWVb/89e/Zo//796tGjh7PNbrdLkvz9/bVjxw7VqlUr33E2m002m83F1QMAruTMmTMKDQ2Vv79r3+66ePopAID5XLpQOAAAAAB4qsDAQF1//fVavny5s81ut2v58uVq1apVvv3r16+vP/74Qxs3bnR+3X777erQoYM2btzI6AsA8CA5OTk6c+aMypcv7/JzR0RESJJO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fLyWLVumNWvWaNu2bRowYIDq169vdnkAUCoINQAAAAAAAHBZx48f14cffqj9+/crNDRU3bp1U834eLPL8lmVK1dW3759tW79ev36669644031Lp1a/Xs2ZOQCUCZR6gBAAAAAACAAuXm5mrVqlXO0Rn169VTu3bteOPcA/j5+emGli1VMz5eS5ct008//aRt27apX79+rLUBoEyzml0AAAAAAJSm6dOnKy4uTkFBQbrhhhv066+/Frrv22+/rZtvvlkVKlRQhQoVlJCQcNn9AaAsOXTokF566SV9+eWXCgwM1G233qouXboQaHiYKlWqqH+/frqhZUslJydrxowZmj17tlJTU80uDQDcglADAAAAgM+YO3euxowZo/Hjx2vDhg1q0qSJunTpohMnThS4/6pVqzRgwACtXLlSa9asUWxsrG655RYdOXKklCsHgNKTlZWlBQsWaOrUqTp8+LCubdRIg+65R7Vq1TK7NBTCz89PN954owYMGKCoyEitX79ezz77rNauXSvDMMwuDwBcilADAAAAgM946aWXNGzYMA0dOlQNGzbUjBkzFBISonfffbfA/T/44AM99NBDatq0qerXr6933nlHdrtdy5cvL+XKAaB0bN++XZMnT9aKFSsUERGhO3v1UqdOnWSz2cwuDUVQuVIl9enTR+3atVNWVpbef/99zZgxQ6dPnza7NABwGdbUAAAAAOATsrKytH79eo0dO9bZZrValZCQoDVr1hTpHOnp6crOzlbFihUL3SczM1OZmZnO7ZSUlJIXDQClJC0tTfPnz9fatWtltVr1lxYt1LJlS/n789aRt7FarWrapIlq1qyplStXavv27ZoyZYq6d++utm3bys/Pz+wSAeCq8D8TAAAAAJ9w6tQp5ebmKjIyMk97ZGSktm/fXqRzPP7444qOjlZCQkKh+0yePFkTJ068qloBoLQYhqF169Zp/vz5SktLU2RkpDp16qQqlSubXZrLvf/BBzp//rwkKePC91OnTuntd95RcHCw7h440MzyXK5ceLhu79FDu3bt0nfffacvvvhC69evV//+/VW9enWzywOAEiPUAAAAAIAimDJlij7++GOtWrXqsovkjh07VmPGjHFup6SkKDY2tjRKBIBiOXXqlObNm6cdO3YoICBAbdu2VZPrrpPVWjZnKz9//rzS09PztNkNI19bWWKxWFS3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6/Dhw3ruueeueRyHDh3SyJEjFRUVpZo1a17z8wEAgBtXenq6XnvtNX3wwQeuDsVlatasqSeeeCJXeYkSJS77WOffH+fHtm3bNHLkSDVr1ixXL4958+ZddgwF5ezZs7rnnns0Z84cNWnSRM8995xCQ0O1b98+TZs2TZMmTdL+/ftVqlSpAj0v97rXhz/++EN33nmnzpw5o549eyo2NlaStHbtWr322mtaunRpoX0+R40apc6dO6tjx46Fcj4AF0dSA4Db2bt3r1auXKkffvhBDz74oCZPnqzhw4cXagx2u10ZGRny9vYu1PMiN09PT1eHUKBSU1Pl6+ub57bVq1froYceUoMGDfTrr78qICDAsW3IkCFau3at/vzzz8IK9ZpISUmRn5+fq8MAAACFqGbNmho3bpyGDh16RV/i3whKliypnj17FsixCvr+2Gq1FujxLsdTTz2lOXPm6N1339WQIUOctg0fPlzvvvuuawK7zmVlZclut7v0d5cfF7v3T0xM1N133y2LxaINGzaoUqVKTttfffVVjRs3rjDCvGbS0tJktVplNjOQDnC5+KsB4HYmT56skJAQtW3bVp07d9bkyZMd2zIzMxUaGqp+/frl2i85OVne3t568sknHWXp6ekaPny4ypcvLy8vL0VGRurpp59Wenq6074mk0kDBw7U5MmTVbVqVXl5eWnOnDmSpLfeeksNGzZUkSJF5OPjo9jYWH333Xe5zn/27FkNHjxYRYsWVUBAgO666y79+++/ec578O+//+r//u//FB4eLi8vL1WtWlVffPHF1bxtTrKysvTyyy+rXLlyju7bzz33XK7rzhnKavny5apbt668vb1VtmxZffnll7mOuXnzZjVt2lQ+Pj4qVaqUXnnlFU2YMEEmkylXN/bZs2ercePG8vPzU0BAgNq2bautW7c6tr/11lsymUz6559/cp1n6NChslqtOnXqlCTnMYP37dunYsWKSZJGjhzp6LY/YsQIRywbNmzIdcxRo0bJYrHkOexBjhEjRshkMmnHjh3q2rWrAgMDVaRIET366KNKS0vLVf/rr79WbGysfHx8FBoaqu7du+vAgQNOdXKGVFi3bp2aNGkiX1/fi/ayyLmmyZMnOyU0ctSuXVt9+/a94P4XGl8559rONX/+fN12220KDg6Wv7+/Klas6Iht8eLFqlOnjiSpX79+jvd54sSJjv1///13tW7dWkFBQfL19VXTpk21YsWKPM+7bds23XfffQoJCdFtt912wfgBAMCN6bnnnpPNZtNrr72Wr/qXus8aM2aMLBaL09A0b7/9tkwmkx5//HFHmc1mU0BAgJ555pkLnqtdu3YqW7ZsntsaNGig2rVrO9Yvdv90tY4ePapixYqpWbNmMgzDUb579275+fmpW7dujrK87vmmTJmi2NhYBQQEKDAwUNWrV9f7778vKXsYsC5dukiSmjdv7ri3yxnO9fy5ChYvXiyTyaRp06bp1VdfValSpeTt7a3bb79du3fvzhX72LFjVbZsWfn4+Khu3bpatmxZvuY/OHjwoD799FPdcccduRIakmSxWPTkk086emkU5r3u9OnTHZ/BokWLqmfPnrnaEn379pW/v7/279+vdu3ayd/fXyVLltTYsWMlSVu2bFGLFi3k5+enMmXK6JtvvskVe2JiooYMGeIYdrZ8+fJ6/fXXnXri7Nu3TyaTSW+99Zbee+89Rxtv27ZtkqQPPvhAVatWla+vr0JCQlS7du08z3WunN/x1KlT9dxzzykiIkJ+fn666667crVppGtz7//pp5/q33//1TvvvJMroSFJ4eHheuGFFy64f87wdue3RXOu7dzhinft2qVOnTopIiJC3t7eKlWqlLp3766kpCRJ2d8HpKSkaNKkSY7Pw7ntrvy033POO2XKFL3wwgsqWbKkfH19lZycfMFrAHBh9NQA4HYmT56se+65R1arVffee68+/vhj/fHHH6pTp448PT11991364cfftCnn37q9GTKjBkzlJ6eru7du0vK7m1x1113afny5RowYIAqV66sLVu26N1339Vff/2Va7zMhQsXatq0aRo4cKCKFi3quGF+//33ddddd6lHjx7KyMjQlClT1KVLF82aNUtt27Z17N+3b19NmzZNvXr1Uv369bVkyRKn7TmOHDmi+vXrOxIpxYoV0+zZs9W/f38lJyfneUN/ue6//35NmjRJnTt31hNPPKHff/9do0eP1vbt2/Xjjz861d29e7c6d+6s/v37q0+fPvriiy/Ut29fxcbGqmrVqpKyb+JyGkBDhw6Vn5+fxo8fLy8vr1zn/uqrr9SnTx/FxcXp9ddfV2pqqj7++GPddttt2rBhg6KiotS1a1c9/fTTmjZtmp566imn/adNm6ZWrVopJCQk17GLFSumjz/+WA8//LDuvvtu3XPPPZKkGjVqKDo6WvHx8Zo8ebJq1arltN/kyZPVrFkzlSxZ8pLvXdeuXRUVFaXRo0dr9erVGjNmjE6dOuWU6Hn11Vf14osvqmvXrrr//vt17NgxffDBB2rSpIk2bNig4OBgR90TJ06oTZs26t69u3r27Knw8PA8z5uamqrffvtNTZo0UenSpS8Z59XYunWr2rVrpxo1auill16Sl5eXdu/e7WiYVK5cWS+99JKGDRumAQMGqHHjxpKkhg0bSsr+W2nTpo1iY2M1fPhwmc1mTZgwQS1atNCyZctUt25dp/N16dJFMTExGjVqlFMjHQAA3Byio6PVu3dvjRs3Ts8+++xFe2vk5z6rcePGstvtWr58uWOuuWXLlslsNmvZsmWOY23YsEFnzpxRkyZNLni+bt26qXfv3o72Ro5//vlHq1ev1ptvvinp0vdPl5KZmanjx4/nKvfz85OPj4/CwsL08ccfq0uXLvrggw80ePBg2e129e3bVwEBAfroo48ueOz58+fr3nvv1e23367XX39dkrR9+3atWLFCjz76qJo0aaLBgwdrzJgxeu6551S5cmVJcrxeyGuvvSaz2awnn3xSSUlJeuONN9SjRw/9/vvvjjoff/yxBg4cqMaNG+uxxx7Tvn371LFjR4WEhFxyyKjZs2crKytLvXr1umi9y3W197oTJ05Uv379VKdOHY0ePVpHjhzR+++/rxUrVuS617fZbGrTpo2aNGmiN954Q5MnT9bAgQPl5+en559/Xj169NA999yjTz75RL1791aDBg0UHR0tKfv+v2nTpvr333/14IMPqnTp0lq5cqWGDh2qw4cP67333nO6rgkTJigtLU0DBgxwzLs3btw4DR48WJ07d3Y8jLV582b9/vvvuu+++y75Xr366qsymUx65plndPToUb333ntq2bKlNm7cKB8fH0nX7t7/p59+ko+Pjzp37nzJOK9GRkaG4uLilJ6erkGDBikiIkL//vuvZs2apcTERAUFBemrr77S/fffr7p162rAgAGSpHLlykm6/Pb7yy+/LKvVqieffFLp6enXfW8a4LplAIAbWbt2rSHJmD9/vmEYhmG3241SpUoZjz76qKPO3LlzDUnGzz//7LTvnXfeaZQtW9ax/tVXXxlms9lYtmyZU71PPvnEkGSsWLHCUSbJMJvNxtatW3PFlJqa6rSekZFhVKtWzWjRooWjbN26dYYkY8iQIU51+/bta0gyhg8f7ijr37+/Ubx4ceP48eNOdbt3724EBQXlOt/5ypQpY7Rt2/aC2zdu3GhIMu6//36n8ieffNKQZCxcuNDpWJKMpUuXOsqOHj1qeHl5GU888YSjbNCgQYbJZDI2bNjgKDtx4oQRGhpqSDL27t1rGIZhnD592ggODjYeeOABp3MnJCQYQUFBTuUNGjQwYmNjneqtWbPGkGR8+eWXjrI+ffoYZcqUcawfO3Ys13ua49577zVKlChh2Gw2R9n69esNScaECRNyv1nnGD58uCHJuOuuu5zKH3nkEUOSsWnTJsMwDGPfvn2GxWIxXn31Vad6W7ZsMTw8PJzKmzZtakgyPvnkk4ue2zAMY9OmTYYkp8/6pZz/Ppz/Xp1/bTneffddQ5Jx7NixCx77jz/+yPN9s9vtRkxMjBEXF2fY7XZHeWpqqhEdHW3ccccduc5777335vuaAADAjWPChAmGJOOPP/4w9uzZY3h4eBiDBw92bG/atKlRtWpVx3p+77NsNpsRGBhoPP3004ZhZN+fFClSxOjSpYthsViM06dPG4ZhGO+8845hNpuNU6dOXTDGpKSkXPe+hmEYb7zxhmEymYx//vnHMIz83T9dSM49d17L6NGjneree++9hq+vr/HXX38Zb775piHJmDFjhlOd8+/5Hn30USMwMNDIysq6YAzTp083JBmLFi3Kta1p06ZG06ZNHeuLFi0yJBmVK1c20tPTHeXvv/++IcnYsmWLYRiGkZ6ebhQpUsSoU6eOkZmZ6ag3ceJEQ5LTMfPy2GOPGZKc2hgXUxj3uhkZGUZYWJhRrVo14+zZs47yWbNmGZKMYcOGOcUjyRg1apSj7NSpU4aPj49hMpmMKVOmOMp37NiR69795ZdfNvz8/Iy//vrLKYZnn33WsFgsxv79+w3DMIy9e/cakozAwEDj6NGjTnU7dOjg9DeUXzm/45IlSxrJycmO8mnTphmSjPfff98wjGt77x8SEmLccsst+Y75/M9pzr8vOW3R868t57O+YcMGQ5Ixffr0ix7fz8/P6NOnT67y/Lbfc85btmzZS7bpAVwaw08BcCuTJ09WeHi4mjdvLim7G2i3bt00ZcoU2Ww2SVKLFi1UtGhRTZ061bHfqVOnNH/+fKdu2dOnT1flypVVqVIlHT9+3LG0aNFCkrRo0SKnczdt2lRVqlTJFVPOEyo550lKSlLjxo21fv16R3nOUFWPPPKI076DBg1yWjcMQ99//73at28vwzCc4oqLi1NSUpLTca/Er7/+KklOXe8lOSYm/OWXX5zKq1Sp4ng6ScruDVGxYkX9/fffTtfXoEEDp0n0QkND1aNHD6djzZ8/X4mJibr33nudrs1isahevXpO73m3bt20bt067dmzx1E2depUeXl5qUOHDld07b1799ahQ4eczjN58mT5+PioU6dO+TpGfHy803rO7zDnff3hhx9kt9vVtWtXp2uMiIhQTExMrs+Vl5dXnsOlnS+nW3Jew04VtJyny2bOnHnZk0xu3LhRu3bt0n333acTJ044rj8lJUW33367li5dmuuYDz30UEGFDgAA3FTZsmXVq1cvffbZZzp8+HCedfJ7n2U2m9WwYUMtXbpUUnavhBMnTujZZ5+VYRhatWqVpOzeG9WqVXN6sv58gYGBatOmjaZNm+b0VPnUqVNVv359Rw/aq7l/kqR69epp/vz5uZZ7773Xqd6HH36ooKAgde7cWS+++KJ69ep1yXvj4OBgpaSkaP78+Zcd18X069fP6SnznDZDTjth7dq1OnHihB544AF5ePxvoJAePXrk2ev6fNfq/vdqfldr167V0aNH9cgjjzjNr9i2bVtVqlQpV1tKyu4lf+65K1asKD8/P3Xt2tVRXrFiRQUHBzu1saZPn67GjRsrJCTE6fPesmVL2Ww2x+c7R6dOnRxD8Z57voMHD+qPP/64rOvM0bt3b6f3v3PnzipevLij7XMt7/2Tk5MLpe0TFBQkSZo7d65SU1Mva98rab/36dPH6TsEAFeGpAYAt2Gz2TRlyhQ1b95ce/fu1e7du7V7927Vq1dPR44c0W+//SZJ8vDwUKdOnTRz5kzHHBE//PCDMjMznZIau3bt0tatW1WsWDGnpUKFCpKyx609V0434PPNmjVL9evXl7e3t0JDQx1DIOWMvylld083m825jlG+fHmn9WPHjikxMVGfffZZrrhyvvg+P67LlRPL+eeOiIhQcHBwrnks8hrqKCQkxDGnRc4xzz+elPv6du3aJSk78XT+9c2bN8/p2rp06SKz2exIThmGoenTp6tNmzYKDAy8zKvOdscdd6h48eKOeVjsdru+/fZbdejQId83zDExMU7r5cqVk9lsdozVumvXLhmGoZiYmFzXuH379ly/v5IlS+ary3HONZ8+fTpfcV6Nbt26qVGjRrr//vsVHh6u7t27a9q0aflq9OX8jvv06ZPr+sePH6/09HSnvw3pwn9bAADg5vLCCy8oKyvrgnNrXM59VuPGjbVu3TqdPXtWy5YtU/HixXXrrbfqlltucQxBtXz5cqeHdy6kW7duOnDggCMZsmfPHq1bt86pbXE190+SVLRoUbVs2TLXUqZMGad6oaGhGjNmjDZv3qygoCCNGTPmksd+5JFHVKFCBbVp00alSpXS//3f/zkeuroa57cTchIVOe2EnHbF+W0CDw+PPOe+ON+1uv+9mt9VzjVVrFgx17ZKlSrlakt5e3vnSjQEBQWpVKlSueb5CAoKcmpj7dq1S3PmzMn1WW/ZsqWk/LVXn3nmGfn7+6tu3bqKiYlRfHx8vodEk3K3fUwmk8qXL+/U9pGuzb1/YGBgobR9oqOj9fjjj2v8+PEqWrSo4uLiNHbs2Fxx5+VK2u+0fYCCwZwaANzGwoULdfjwYU2ZMkVTpkzJtX3y5Mlq1aqVJKl79+769NNPNXv2bHXs2FHTpk1TpUqVdMsttzjq2+12Va9eXe+8806e54uMjHRaz+tpimXLlumuu+5SkyZN9NFHH6l48eLy9PTUhAkTLjn5Wl5ybqR79uypPn365FmnRo0al33cvJx/E30hFoslz3LjIuOfXkjO9X311VeKiIjItf3cJ7hKlCihxo0ba9q0aXruuee0evVq7d+/3zEO8JWwWCy67777NG7cOH300UdasWKFDh06pJ49e17xMc9/H+12u0wmk2bPnp3ne+fv7++0nt+ndMqXLy8PDw9t2bKlwGLNkdPL6dyYli5dqkWLFumXX37RnDlzNHXqVLVo0ULz5s274GdC+t/v+M0333TquXOuK30PAADAja1s2bLq2bOnPvvsMz377LO5tl/OfdZtt92mzMxMrVq1SsuWLXMkLxo3bqxly5Zpx44dOnbsWL6SGu3bt5evr6+mTZumhg0batq0aTKbzY7JtaWru3+6XHPnzpWUnTw4ePDgRXuaSFJYWJg2btyouXPnavbs2Zo9e7YmTJig3r17a9KkSVccR0G2E/KSMzn0li1bLnhfea7CuNe9XBc6Vn7eO7vdrjvuuENPP/10nnVzHsbLkdc9deXKlbVz507NmjVLc+bM0ffff6+PPvpIw4YN08iRI/N7GRd0Le/9K1WqpI0bNyojI+OK5p3I7+dBkt5++2317dtXM2fO1Lx58zR48GDHHIoXm/vlStrvtH2AgkFSA4DbmDx5ssLCwjR27Nhc23744Qf9+OOP+uSTT+Tj46MmTZqoePHimjp1qm677TYtXLhQzz//vNM+5cqV06ZNm3T77bfn+wv+833//ffy9vbW3LlznSbFnjBhglO9MmXKyG63a+/evU5Pu+zevdupXrFixRQQECCbzeZ4Aqeg5cSya9cup8n/jhw5osTExFxPg+X3mOdfi5T7+nImUwsLC8vX9XXr1k2PPPKIdu7cqalTp8rX11ft27e/6D6X+l327t1bb7/9tn7++WfNnj1bxYoVU1xc3CVjybFr1y6np2t2794tu93ueNqsXLlyMgxD0dHRuRoaV8PX11ctWrTQwoULdeDAgVxJt/wICQlRYmJirvLznyiTsodtuP3223X77bfrnXfe0ahRo/T8889r0aJFatmy5QXf55zfcWBg4DX7DAMAgBvXCy+8oK+//jrPB1ku5z6rbt26slqtWrZsmZYtW6annnpKktSkSRONGzfO0cv7YpOE5/Dz81O7du00ffp0vfPOO5o6daoaN26ca0LzS90/FYQ5c+Zo/PjxevrppzV58mT16dNHv//+u9PDQXmxWq1q37692rdvL7vdrkceeUSffvqpXnzxRZUvX/6K20MXk9Ou2L17t2P4YEnKysrSvn37LvmwVps2bWSxWPT111/na7LwwrjXzbmmnTt3OoYtzrFz584raktdSLly5XTmzJmr/uz4+fmpW7du6tatmzIyMnTPPffo1Vdf1dChQ52G0MpLTk+MHIZhaPfu3Y7f3bW892/fvr1WrVql77//PtcwbPmR03Po/M9EXp8HSapevbqqV6+uF154QStXrlSjRo30ySef6JVXXpGUdzuzMNrvAPLG8FMA3MLZs2f1ww8/qF27durcuXOuZeDAgTp9+rR++uknSdk3qZ07d9bPP/+sr776SllZWU7dwyWpa9eu+vfffzVu3Lg8z5eSknLJuCwWi0wmk9PTHvv27dOMGTOc6uV8af7RRx85lX/wwQe5jtepUyd9//33+vPPP3Od79ixY5eM6VLuvPNOSdJ7773nVJ7TY6Vt27aXfcy4uDitWrVKGzdudJSdPHnSMczTufUCAwM1atQoZWZm5jrO+dfXqVMnWSwWffvtt5o+fbratWsnPz+/i8bi6+srKffNa44aNWqoRo0aGj9+vL7//nt17979ko3Ac52fVMv5HbZp00aSdM8998hisWjkyJG5nlIzDEMnTpzI97nON3z4cBmGoV69eunMmTO5tq9bt+6iT9uVK1dOSUlJ2rx5s6Ps8OHD+vHHH53qnTx5Mte+OU9e5QzplvN7OP99jo2NVbly5fTWW2/lGWNBfIYBAMCNq1y5curZs6c+/fRTJSQkOG27nPssb29v1alTR99++63279/v1FPj7NmzGjNmjMqVK6fixYvnK65u3brp0KFDGj9+vDZt2pSrbZGf+6erlZiYqPvvv19169bVqFGjNH78eK1fv16jRo266H7n33+azWbHl9KXure7GrVr11aRIkU0btw4ZWVlOconT57sNMzShURGRuqBBx7QvHnzcrWbpOyn5N9++20dPHhQUuHc69auXVthYWH65JNPnH6vs2fP1vbt26+oLXUhXbt21apVqxw9c86VmJjo9J5eyPm/e6vVqipVqsgwjDzbY+f78ssvnYaA+u6773T48GFH2+da3vs/9NBDKl68uJ544gn99ddfubYfPXrUkXDIS07C5dy5R2w2mz777DOnesnJybney+rVq8tsNjv9jv38/HJ9Hgqj/Q4gb/TUAOAWfvrpJ50+fVp33XVXntvr16+vYsWKafLkyY4GRrdu3fTBBx9o+PDhql69ulOvBEnq1auXpk2bpoceekiLFi1So0aNZLPZtGPHDk2bNk1z585V7dq1LxpX27Zt9c4776h169a67777dPToUY0dO1bly5d3upmOjY1Vp06d9N577+nEiROqX7++lixZ4rg5O/epj9dee02LFi1SvXr19MADD6hKlSo6efKk1q9frwULFuR5E36+3bt353mDV6tWLbVt21Z9+vTRZ599psTERDVt2lRr1qzRpEmT1LFjR6enqPLr6aef1tdff6077rhDgwYNkp+fn8aPH6/SpUvr5MmTjusLDAzUxx9/rF69eunWW29V9+7dVaxYMe3fv1+//PKLGjVqpA8//NBx3LCwMDVv3lzvvPOOTp8+navxmBcfHx9VqVJFU6dOVYUKFRQaGqpq1aqpWrVqjjq9e/fWk08+KUmXPfTU3r17ddddd6l169ZatWqVvv76a913332Ooc3KlSunV155RUOHDtW+ffvUsWNHBQQEaO/evfrxxx81YMAAx7kvV8OGDTV27Fg98sgjqlSpknr16qWYmBidPn1aixcv1k8//XTRG/vu3bvrmWee0d13363BgwcrNTVVH3/8sSpUqOA0gd1LL72kpUuXqm3btipTpoyOHj2qjz76SKVKldJtt93muM7g4GB98sknCggIkJ+fn+rVq6fo6GiNHz9ebdq0UdWqVdWvXz+VLFlS//77rxYtWqTAwED9/PPPV3T9AADg5vD888/rq6++0s6dO1W1alVH+eXeZzVu3FivvfaagoKCVL16dUnZ95cVK1bUzp071bdv33zHdOeddyogIEBPPvmk44vMc+Xn/uli/v33X3399de5yv39/dWxY0dJ0qOPPqoTJ05owYIFslgsat26te6//3698sor6tChg9NQu+e6//77dfLkSbVo0UKlSpXSP//8ow8++EA1a9Z0tJFq1qwpi8Wi119/XUlJSfLy8lKLFi0UFhaW7/fofFarVSNGjNCgQYPUokULde3aVfv27dPEiRNVrly5fPUOefvtt7Vnzx4NHjzY8ZBbSEiI9u/fr+nTp2vHjh3q3r27pMK713399dfVr18/NW3aVPfee6+OHDmi999/X1FRUXrssceu+P0631NPPaWffvpJ7dq1U9++fRUbG6uUlBRt2bJF3333nfbt26eiRYte9BitWrVSRESEGjVqpPDwcG3fvl0ffvih2rZtm685BUNDQ3XbbbepX79+OnLkiN577z2VL19eDzzwgKTsBNm1uvcPCQnRjz/+qDvvvFM1a9ZUz549FRsbK0lav369vv32WzVo0OCC+1etWlX169fX0KFDdfLkSYWGhmrKlCm5EhgLFy7UwIED1aVLF1WoUEFZWVn66quvcv2dx8bGasGCBXrnnXdUokQJRUdHq169egXSfgdwBQwAcAPt27c3vL29jZSUlAvW6du3r+Hp6WkcP37cMAzDsNvtRmRkpCHJeOWVV/LcJyMjw3j99deNqlWrGl5eXkZISIgRGxtrjBw50khKSnLUk2TEx8fneYzPP//ciImJMby8vIxKlSoZEyZMMIYPH26c/09sSkqKER8fb4SGhhr+/v5Gx44djZ07dxqSjNdee82p7pEjR4z4+HgjMjLS8PT0NCIiIozbb7/d+Oyzzy75XpUpU8aQ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MNBpAQAAAAAAwIWdPHlSc+bMUXx8vPz8/HJtDw4OzvexXnzxRW3btk2zZ8/W9u3b9fHHH6to0aKSpDVr1kiSFixYoMOHDztG63j//ff19ttv66233tLmzZsVFxenu+66S7t27XI69vDhw/XCCy9o/fr18vDw0H333aenn35a77//vpYtW6bdu3dr2LBhjvqTJ0/WsGHD9Oqrr2r79u0aNWqUXnzxRU2aNMnpuM8++6weffRRbd++XXFxcfm+1iZNmqhs2bL66quvHGWZmZmaPHmy/u///s9RlpqaqldffVVffvmlVqxYocTERHXv3t2xfdmyZerdu7ceffRRbdu2TZ9++qkmTpyoV199Nd+xAMCNwKVJDcMwNHDgQP34449auHChIxN/MTlZ/uLFi0uSGjRooC1btujo0aOOOvPnz1dgYKCqVKlyTeIGAAAAcP0bMWJErvHMK1Wq5Nielpam+Ph4FSlSRP7+/urUqVOuB6b279+vtm3bytfXV2FhYXrqqad4IhbATWv37t0yDMPp39IrtX//ftWqVUu1a9dWVFSUWrZsqfbt20uSihUrJkkqUqSIIiIiHMM2vfXWW3rmmWfUvXt3VaxYUa+//rpq1qyp9957z+nYTz75pOLi4lS5cmU9+uijWrdunV588UU1atRItWrVUv/+/bVo0SJH/eHDh+vtt9/WPffco+joaN1zzz167LHH9Omnnzodd8iQIY46Od9L5Vf//v2dhqL6+eeflZaWpq5duzrKMjMz9eGHH6pBgwaKjY3VpEmTtHLlSkeSZ+TIkXr22WfVp08flS1bVnfccYdefvnlXHECwI3OpUmN+Ph4ff311/rmm28UEBCghIQEJSQk6OzZs5KkPXv26OWXX9a6deu0b98+/fTTT+rdu7eaNGmiGjVqSJJatWqlKlWqqFevXtq0aZPmzp2rF154QfHx8fLy8nLl5QEAAABwsapVq+rw4cOOZfny5Y5tjz32mH7++WdNnz5dS5Ys0aFDh3TPPfc4tttsNrVt21YZGRlauXKlJk2apIkTJzo93QsANxPDMArsWA8//LCmTJmimjVr6umnn9bKlSsvWj85OVmHDh1So0aNnMobNWqk7du3O5XlfGck/W/e1erVqzuV5Twcm5KSoj179qh///7y9/d3LK+88kquoc9r1659+Rf6n759+2r37t2OIbomTpyo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BZIaAAAAAAAAAADALZDUAAAAAAAAAAAAboGkBgAAAAAAAAAAcAskNQAAAAAAAAAAgFvwcHUAAAAAAAAAyB9TuQ6Fej5jz8zLqt+3b19NmjRJo0eP1rPPPusonzFjhu6++24ZhlHQIV7UokWL9Oabb+r333/X2bNnFRUVpTZt2ujxxx9XyZIlr/r4I0aM0IwZM7Rx48arDxYAkC/01AAAAAAAAECB8fb21uuvv65Tp065NI5PP/1ULVu2VEREhL7//ntt27ZNn3zyiZKSkvT222+7NLbCkpGR4eoQAKDAkdQAAAAAAABAgclJJIwePfqi9ZYvX67GjRvLx8dHkZGRGjx4sFJSUiRJH374oapVq+aoO2PGDJlMJn3yySdO53nhhRfyPPbBgwc1ePBgDR48WF988YWaNWumqKgoNWnSROPHj9ewYcMkZfe0qFmzptO+7733nqKiohzrixcvVt26deXn56fg4GA1atRI//zzjyZOnKiRI0dq06ZNMplMMplMmjhxoiRp//796tChg/z9/RUYGKiuXbvqyJEjjmPmnPeLL75Q6dKl5e/vr0ceeUQ2m01vvPGGIiIiFBYWpldffdUptsTERN1///0qVqyYAgMD1aJFC23atCnXccePH6/o6Gh5e3tf9HcAAO6IpAYAAAAAAAAKjMVi0ahRo/TBBx/o4MGDedbZs2ePWrdurU6dOmnz5s2aOnWqli9froEDB0qSmjZtqm3btunYsWOSpCVLlqho0aJavHixJCkzM1OrVq1Ss2bN8jz+9OnTlZGRoaeffjrP7cHBwfm6lqysLHXs2FFNmzbV5s2btWrVKg0YMEAmk0ndunXTE088oapVq+rw4cM6fPiwunXrJrvdrg4dOujkyZNasmSJ5s+fr7///lvdunXL9R7Mnj1bc+bM0bfffqvPP/9cbdu21cGDB7VkyRK9/vrreuGFF/T777879unSpYuOHj2q2bNna926dbr11lt1++236+TJk446u3fv1vfff68ffviBYbEA3JCYUwMAAAAAAAAF6u6771bNmjU1fPhwff7557m2jx49Wj169NCQIUMkSTExMRozZoyaNm2qjz/+WNWqVVNoaKiWLFmizp07a/HixXriiSf0/vvvS5LWrFmjzMxMNWzYMM/z79q1S4GBgSpevPhVXUdycrKSkpLUrl07lStXTpJUuXJlx3Z/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S5cuKSkpye23315r/sQTT0xJSUmt1+GHH15rm/nz5+f4449P27Zt0759+wwaNChLlixZt7MHAAAAAACKxjqVGptvvnnGjBmTOXPm5LLLLssOO+yQt99+OzNnzkySHH/88Zk+fXqmTJlS0GLhS5cuzR577JGKioq1bnP44Ydnzpw5Na8bb7yx1vzxxx+fp59+OhMnTsyECRMyefLknHrqqeucAQAAAAAAKA4FLRTeqlWrfPWrX81Xv/rVOvnwfv36pV+/fh+7TWlpaTp37vyRc88++2zuuuuuPProo+nVq1eS5Fe/+lX69++fX/ziF+nSpctH7rd8+fIsX7685v2iRYvW8wwAAAAAAIBPyzrdqdGQHnjggXTs2DE77bRTBg8enHfeeadmbsqUKWnfvn1NoZEkffv2TZMmTfLII4+s9ZijR49Ou3btal5du3at13MAAAAAAAA+uQ261Dj88MNz7bXXZtKkSfnZz36WBx98MP369cuqVauSJJWVlenYsWOtfZo1a5YOHTqksrJyrccdOXJkFi5cWPN67bXX6vU8AACAT98VV1yRHj16pG3btmnbtm3Kysryt7/9rWb+vffey5AhQ7L55ptn0003zYABAzJ37txax5g9e3aOOOKIbLLJJunYsWO+973v5f333/+0TwUAAPhfBT1+6tN23HHH1fy8++67p0ePHvnc5z6XBx54IIcccsh6H7e0tDSlpaV1EREAANhAffazn81Pf/rT7LDDDqmurs4111yTo48+Ov/85z+z6667Zvjw4fnrX/+am2++Oe3atcvQoUPzla98Jf/4xz+SJKtWrcoRRxyRzp075+GHH86cOXPyrW99K82bN8+FF17YwGcHAACN0wZ9p8aHbbfddvnMZz6TF198MUnSuXPnzJs3r9Y277//fubPn7/WdTgAAIDG4cgjj0z//v2zww47ZMcdd8wFF1yQTTfdNFOnTs3ChQtz1VVXZcyYMTn44IPTs2fPXH311Xn44YczderUJMk999yTZ555Jtddd1323HPP9OvXL+edd14qKiqyYsWKtX7u8uXLs2jRolovAACgbhRcaixdurQ+cqyT119/Pe+880623HLLJElZWVkWLFiQ6dOn12xz3333paqqKr17926omAAAwAZm1apVuemmm7J06dKUlZVl+vTpWblyZfr27Vuzzc4775ytt946U6ZMSfKfNfx23333dOrUqWab8vLyLFq0KE8//fRaP8safgAAUH8KLjU6deqUk08+OQ899NAn/vAlS5ZkxowZmTFjRpJk1qxZmTFjRmbPnp0lS5bke9/7XqZOnZpXXnklkyZNytFHH53tt98+5eXlSZJddtklhx9+eE455ZRMmzYt//jHPzJ06NAcd9xx6dKlyyfOBwAAFLcnn3wym266aUpLS/Ptb387t912W7p3757Kysq0aNEi7du3r7V9p06datbnq6ysrFVorJ5fPbc21vADAID6U3Cpcd1112X+/Pk5+OCDs+OOO+anP/1p3nzzzfX68Mceeyx77bVX9tprryTJiBEjstdee+Xcc89N06ZN88QTT+Soo47KjjvumEGDBqVnz575+9//Xms9jOuvvz4777xzDjnkkPTv3z/7779/fvOb36xXHgAAYOOy0047ZcaMGXnkkUcyePDgDBw4MM8880y9fmZpaWnN4uSrXwAAQN0oeKHwY445Jsccc0zeeuut/P73v8/48eNzzjnnpLy8PCeffHKOOuqoNGu2boc96KCDUl1dvdb5u++++/88RocOHXLDDTesc34AAKDxaNGiRbbffvskSc+ePfPoo4/ml7/8Zf7rv/4rK1asyIIFC2rdrTF37tya9fk6d+6cadOm1Tre3Llza+YAAIBP33ovFL7FFltkxIgReeKJJzJmzJjce++9+epXv5ouXbrk3HPPzbJly+oyJwAAwCdWVVWV5cuXp2fPnmnevHkmTZpUM/f8889n9uzZKSsrS/KfNfyefPLJzJs3r2abiRMnpm3btunevfunnh0AAFiPOzVWmzt3bq655pqMHz8+r776ar761a9m0KBBef311/Ozn/0sU6dOzT333FOXWQEAANbZyJEj069fv2y99dZZvHhxbrjhhjzwwAO5++67065duwwaNCgjRoxIhw4d0rZt2wwbNixlZWXZZ599kiSHHXZYunfvnhNOOCEXXXRRKisrc/bZZ2fIkCG1HokLAAB8egouNW699dZcffXVufvuu9O9e/f8z//8T775zW/WumV73333zS677FKXOQEAAAoyb968fOtb38qcOXPSrl279OjRI3fffXcOPfTQJMnYsWPTpEmTDBgwIMuXL095eXkuv/zymv2bNm2aCRMmZPDgwSkrK0vr1q0zcODAjBo1qqFOCQAAGr2CS42TTjopxx13XP7xj39k7733/shtunTpkh/+8IefOBwAAMD6uuqqqz52vmXLlqmoqEhFRcVat+nWrVvuvPPOuo4GAACsp4JLjTlz5mSTTTb52G1atWqVH/3oR+sdCgAAAAAA4MMKXii8TZs2tRbKW+2dd95J06ZN6yQUAAAAAADAhxVcalRXV3/k+PLly9OiRYtPHAgAAAAAAOCjrPPjpy699NIkSUlJSa688spsuummNXOrVq3K5MmTs/POO9d9QgAAAAAAgBRQaowdOzbJf+7UGDduXK1HTbVo0SLbbLNNxo0bV/cJAQAAAAAAUkCpMWvWrCRJnz59cuutt2azzTart1AAAAAAAAAfts6lxmr3339/feQAAAAAAAD4WOtUaowYMSLnnXdeWrdunREjRnzstmPGjKmTYAAAAAAAAB+0TqXGP//5z6xcubLm57UpKSmpm1QAAAAAAAAfsk6lxgcfOeXxUwAAAAAAQENoUugO1113XZYtW1YfWQAAAAAAANaq4FJj+PDh6dixY77xjW/kzjvvzKpVq+ojFwAAAAAAQC0Flxpz5szJTTfdlJKSkhx77LHZcsstM2TIkDz88MP1kQ8AAAAAACDJepQazZo1y5e+9KVcf/31mTdvXsaOHZtXXnklffr0yec+97n6yAgAADQi2223Xd555501xhcsWJDtttuuARIBAAAbinVaKHxtNtlkk5SXl+fdd9/Nq6++mmeffbaucgEAAI3UK6+88pGPuV2+fHneeOONBkgEAABsKNar1Fi2bFluu+22XH/99Zk0aVK6du2ar3/96/nTn/5U1/kAAIBG4i9/+UvNz3fffXfatWtX837VqlWZNGlSttlmmwZIBgAAbCgKLjWOO+64TJgwIZtsskmOPfbYnHPOOSkrK6uPbAAAQCNyzDHHJElKSkoycODAWnPNmzfPNttsk4svvrgBkgEAABuKgkuNpk2b5o9//GPKy8vTtGnT+sgEAAA0QlVVVUmSbbfdNo8++mg+85nPNHAiAABgQ1NwqXH99dfX/Pzee++lZcuWdRoIAABo3GbNmtXQEQAAgA1UwaVGVVVVLrjggowbNy5z587NCy+8kO222y7nnHNOttlmmwwaNKg+cgIAAI3IpEmTMmnSpMybN6/mDo7Vfve73zVQKgAAoKE1KXSH888/P+PHj89FF12UFi1a1IzvtttuufLKK+s0HAAA0Pj85Cc/yWGHHZZJkybl7bffzrvvvlvrBQAANF4F36lx7bXX5je/+U0OOeSQfPvb364Z32OPPfLcc8/VaTgAAKDxGTduXMaPH58TTjihoaMAAAAbmILv1HjjjTey/fbbrzFeVVWVlStX1kkoAACg8VqxYkX23Xffho4BAABsgAouNbp3756///3va4z/6U9/yl577VUnoQAAgMbrv//7v3PDDTc0dAwAAGADVPDjp84999wMHDgwb7zxRqqqqnLrrbfm+eefz7XXXpsJEybUR0YAAKARee+99/Kb3/wm9957b3r06JHmzZvXmh8zZkwDJQMAABpawaXG0UcfnTvuuCOjRo1K69atc+655+bzn/987rjjjhx66KH1kREAAGhEnnjiiey5555JkqeeeqrWXElJSQMkAgAANhQFlxpJ8sUvfjETJ06s6ywAAAC5//77GzoCAACwgSp4TQ0AAAAAAICGUPCdGpttttlH3vJdUlKSli1bZvvtt8+JJ56Yk046qU4CAgAAjUufPn0+9jFT991336eYBgAA2JCs10LhF1xwQfr165cvfOELSZJp06blrrvuypAhQzJr1qwMHjw477//fk455ZQ6DwwAAGzcVq+nsdrKlSszY8aMPPXUUxk4cGDDhAIAADYIBZcaDz30UM4///x8+9vfrjX+61//Ovfcc09uueWW9OjRI5deeqlSAwAAKNjYsWM/cvzHP/5xlixZ8imnAQAANiQFr6lx9913p2/fvmuMH3LIIbn77ruTJP3798/LL7/8ydMBAAD8r29+85v53e9+19AxAACABlRwqdGhQ4fccccda4zfcccd6dChQ5Jk6dKladOmzSdPBwAA8L+mTJmSli1bNnQMAACgARX8+KlzzjkngwcPzv3331+zpsajjz6aO++8M+PGjUuSTJw4MQceeGDdJgUAABqFr3zlK7XeV1dXZ86cOXnsscdyzjnnNFAqAABgQ1BwqXHKKaeke/fuueyyy3LrrbcmSXbaaac8+OCD2XfffZMkZ5xxRt2mBAAAGo127drVet+kSZPstNNOGTVqVA477LAGSgUAAGwICi41kmS//fbLfvvtV9dZAAAAcvXVVzd0BAAAYAO1XqVGVVVVXnzxxcybNy9VVVW15g444IA6CQYAADRu06dPz7PPPpsk2XXXXbPXXns1cCIAAKChFVxqTJ06Nd/4xjfy6quvprq6utZcSUlJVq1aVWfhAACAxmfevHk57rjj8sADD6R9+/ZJkgULFqRPnz656aabssUWWzRsQAAAoME0KXSHb3/72+nVq1eeeuqpzJ8/P++++27Na/78+fWREQAAaESGDRuWxYsX5+mnn878+fMzf/78PPXUU1m0aFG+853vNHQ8AACgARV8p8bMmTPzpz/9Kdtvv3195AEAABq5u+66K/fee2922WWXmrHu3bunoqLCQuEAANDIFXynRu/evfPiiy/WRxYAAIBUVVWlefPma4w3b958jTX9AACAxqXgOzWGDRuWM844I5WVldl9993XuNjo0aNHnYUDAAAan4MPPjjf/e53c+ONN6ZLly5JkjfeeCPDhw/PIYcc0sDpAACAhlRwqTFgwIAkycknn1wzVlJSkurqaguFAwAAn9hll12Wo446Kttss026du2aJHnttdey22675brrrmvgdAAAQEMquNSYNWtWfeQAAABIknTt2jWPP/547r333jz33HNJkl122SV9+/Zt4GQAAEBDK7jU6NatW33kAAAAGrn77rsvQ4cOzdSpU9O2bdsceuihOfTQQ5MkCxcuzK677ppx48bli1/8YgMnBQAAGkrBC4UnyUsvvZRhw4alb9++6du3b77zne/kpZdequtsAABAI3LJJZfklFNOSdu2bdeYa9euXU477bSMGTOmAZIBAAAbioJLjbvvvjvdu3fPtGnT0qNHj/To0SOPPPJIdt1110ycOLE+MgIAAI3Av/71rxx++OFrnT/ssMMyffr0TzERAACwoSn48VNnnXVWhg8fnp/+9KdrjP/gBz+ouT0cAACgEHPnzk3z5s3XOt+sWbO89dZbn2IiAABgQ1PwnRrPPvtsBg0atMb4ySefnGeeeaZOQgEAAI3PVlttlaeeemqt80888US23HLLTzERAACwoSm41Nhiiy0yY8aMNcZnzJiRjh071kUmAACgEerfv3/OOeecvPfee2vM/fvf/86PfvSjfOlLX2qAZAAAwIai4MdPnXLKKTn11FPz8ssvZ999902S/OMf/8jPfvazjBgxos4DAgAAjcPZZ5+dW2+9NTvuuGOGDh2anXbaKUny3HPPpaKiIqtWrcoPf/jDBk4JAAA0pIJLjXPOOSdt2rTJxRdfnJEjRyZJunTpkh//+Mf57ne/W+cBAQCAxqFTp055+OGHM3jw4IwcOTLV1dVJkpKSkpSXl6eioiKdOnVq4JQAAEBDKrjUKCkpyfDhwzN8+PAsXrw4SdKmTZssW7YsDz/8cM3dGwAAAIXq1q1b7rzzzrz77rt58cUXU11dnR122CGbbbZZQ0cDAAA2AAWXGh/Upk2bmp9nzpyZL37xi1m1atUnDgUAADRum222Wfbee++GjgEAAGxgCl4oHAAAAAAAoCEoNQAAAAAAgKKg1AAAAAAAAIrCOq+p8Ze//OVj52fNmvWJwwAAAAAAAKzNOpcaxxxzzP+5TUlJySfJAgAAAAAAsFbrXGpUVVXVZw4AAAAAAICPZU0NAAAAAACgKCg1AAAAAACAoqDUAAAAAAAAioJSAwAAAAAAKApKDQAAAAAAoCisV6mxYMGCXHnllRk5cmTmz5+fJHn88cfzxhtv1Gk4AAAAAACA1ZoVusMTTzyRvn37pl27dnnllVdyyimnpEOHDrn11lsze/bsXHvttfWREwAAAAAAaOQKvlNjxIgROfHEEzNz5sy0bNmyZrx///6ZPHlynYYDAAAAAABYreBS49FHH81pp522xvhWW22VysrKOgkFAAAAAADwYQWXGqWlpVm0aNEa4y+88EK22GKLOgkFAAAAAADwYQWXGkcddVRGjRqVlStXJklKSkoye/bs/OAHP8iAAQPqPCAAAAAAAECyHqXGxRdfnCVLlqRjx47597//nQMPPDDbb7992rRpkwsuuKA+MgIAAAAAAKRZoTu0a9cuEydOzEMPPZQnnngiS5Ysyec///n07du3PvIBAAAAAAAkWY9SY7X9998/+++/f11mAQAAAAAAWKuCS41LL730I8dLSkrSsmXLbL/99jnggAPStGnTTxwOAAAAAABgtYJLjbFjx+att97KsmXLstlmmyVJ3n333WyyySbZdNNNM2/evGy33Xa5//7707Vr1zoPDAAAAAAANE4FLxR+4YUXZu+9987MmTPzzjvv5J133skLL7yQ3r1755e//GVmz56dzp07Z/jw4fWRFwAAAAAAaKQKvlPj7LPPzi233JLPfe5zNWPbb799fvGLX2TAgAF5+eWXc9FFF2XAgAF1GhQAAAAAAGjcCr5TY86cOXn//ffXGH///fdTWVmZJOnSpUsWL178ydMBAAAAAAD8r4JLjT59+uS0007LP//5z5qxf/7znxk8eHAOPvjgJMmTTz6Zbbfdtu5SAgAAAAAAjV7BpcZVV12VDh06pGfPniktLU1paWl69eqVDh065KqrrkqSbLrpprn44ovrPCwAAAAAANB4FbymRufOnTNx4sQ899xzeeGFF5IkO+20U3baaaeabfr06VN3CQEAAAAAALIepcZqO++8c3beeee6zAIAAAAAALBW61VqvP766/nLX/6S2bNnZ8WKFbXmxowZUyfBAAAAAAAAPqjgNTUmTZqUnXbaKVdccUUuvvji3H///bn66qvzu9/9LjNmzCjoWJMnT86RRx6ZLl26pKSkJLfffnut+erq6px77rnZcsst06pVq/Tt2zczZ86stc38+fNz/PHHp23btmnfvn0GDRqUJUuWFHpaAAAAAADABq7gUmPkyJE588wz8+STT6Zly5a55ZZb8tprr+XAAw/M1772tYKOtXTp0uyxxx6pqKj4yPmLLrool156acaNG5dHHnkkrVu3Tnl5ed57772abY4//vg8/fTTmThxYiZMmJDJkyfn1FNPLfS0AAAAAACADVzBj5969tlnc+ONN/5n52bN8u9//zubbrppRo0alaOPPjqDBw9e52P169cv/fr1+8i56urqXHLJJTn77LNz9NFHJ0muvfbadOrUKbfffnuOO+64PPvss7nrrrvy6KOPplevXkmSX/3qV+nfv39+8YtfpEuXLoWeHgAAAAAAsIEq+E6N1q1b16yjseWWW+all16qmXv77bfrLNisWbNSWVmZvn371oy1a9cuvXv3zpQpU5IkU6ZMSfv27WsKjSTp27dvmjRpkkceeWStx16+fHkWLVpU6wUAAGxcRo8enb333jtt2rRJx44dc8wxx+T555+vtc17772XIUOGZPPNN8+mm26aAQMGZO7cubW2mT17do444ohssskm6dixY773ve/l/fff/zRPBQAA+F8Flxr77LNPHnrooSRJ//79c8YZZ+SCCy7IySefnH322afOglVWViZJOnXqVGu8U6dONXOVlZXp2LFjrflmzZqlQ4cONdt8lNGjR6ddu3Y1r65du9ZZbgAAYMPw4IMPZsiQIZk6dWomTpyYlStX5rDDDsvSpUtrthk+fHjuuOOO3HzzzXnwwQfz5ptv5itf+UrN/KpVq3LEEUdkxYoVefjhh3PNNddk/PjxOffccxvilAAAoNEr+PFTY8aMqVmI+yc/+UmWLFmSP/zhD9lhhx0yZsyYOg9YH0aOHJkRI0bUvF+0aJFiAwAANjJ33XVXrffjx49Px44dM3369BxwwAFZuHBhrrrqqtxwww05+OCDkyRXX311dtlll0ydOjX77LNP7rnnnjzzzDO5995706lTp+y5554577zz8oMf/CA//vGP06JFi4Y4NQAAaLQKulNj1apVef3117P11lsn+c+jqMaNG5cnnngit9xyS7p161ZnwTp37pwka9z6PXfu3Jq5zp07Z968ebXm33///cyfP79mm49SWlqatm3b1noBAAAbt4ULFyZJOnTokCSZPn16Vq5cWeuRtzvvvHO23nrrWo+83X333WvdQV5eXp5Fixbl6aef/sjP8bhbAACoPwWVGk2bNs1hhx2Wd999t77y1Nh2223TuXPnTJo0qWZs0aJFeeSRR1JWVpYkKSsry4IFCzJ9+vSabe67775UVVWld+/e9Z4RAAAoDlVVVTn99NOz3377Zbfddkvyn8fZtmjRIu3bt6+17YcfeftRj8RdPfdRPO4WAADqT8Frauy22255+eWX6+TDlyxZkhkzZmTGjBlJ/rM4+IwZMzJ79uyUlJTk9NNPz/nnn5+//OUvefLJJ/Otb30rXbp0yTHHHJMk2WWXXXL44YfnlFNOybRp0/KPf/wjQ4cOzXHHHZcuXbrUSUYAAKD4DRkyJE899VRuuummev+skSNHZuHChTWv1157rd4/EwAAGouC19Q4//zzc+aZZ+a8885Lz54907p161rzhTzK6bHHHkufPn1q3q9e52LgwIEZP358vv/972fp0qU59dRTs2DBguy///6566670rJly5p9rr/++gwdOjSHHHJImjRpkgEDBuTSSy8t9LQAAICN1NChQzNhwoRMnjw5n/3sZ2vGO3funBUrVmTBggW17tb48CNvp02bVut4qx+Ru7ZH3paWlqa0tLSOzwIAAEjWo9To379/kuSoo45KSUlJzXh1dXVKSkqyatWqdT7WQQcdlOrq6rXOl5SUZNSoURk1atRat+nQoUNuuOGGdf5MAACgcaiurs6wYcNy22235YEHHsi2225ba75nz55p3rx5Jk2alAEDBiRJnn/++cyePbvWI28vuOCCzJs3Lx07dkySTJw4MW3btk337t0/3RMCAAAKLzXuv//++sgBAABQp4YMGZIbbrghf/7zn9OmTZuaNTDatWuXVq1apV27dhk0aFBGjBiRDh06pG3bthk2bFjKysqyzz77JEkOO+ywdO/ePSeccEIuuuiiVFZW5uyzz86QIUPcjQEAAA2g4FLjwAMPrI8cAAAAdeqKK65I8p87xD/o6quvzoknnpgkGTt2bM1jbJcvX57y8vJcfvnlNds2bdo0EyZMyODBg1NWVpbWrVtn4MCBH3s3OQAAUH8KLjWS5O9//3t+/etf5+WXX87NN9+crbbaKr///e+z7bbbZv/996/rjAAAAAX7uEfdrtayZctUVFSkoqJirdt069Ytd955Z11GAwAA1lOTQne45ZZbUl5enlatWuXxxx/P8uXLkyQLFy7MhRdeWOcBAQAAAAAAkvUoNc4///yMGzcuv/3tb9O8efOa8f322y+PP/54nYYDAAAAAABYreBS4/nnn88BBxywxni7du2yYMGCusgEAAAAAACwhoJLjc6dO+fFF19cY/yhhx7KdtttVyehAAAAAAAAPqzgUuOUU07Jd7/73TzyyCMpKSnJm2++meuvvz5nnnlmBg8eXB8ZAQAAAAAA0qzQHc4666xUVVXlkEMOybJly3LAAQektLQ0Z555ZoYNG1YfGQEAAAAAAAovNUpKSvLDH/4w3/ve9/Liiy9myZIl6d69ezbddNP6yAcAAAAAAJBkPR4/dd1112XZsmVp0aJFunfvni984QsKDQAAAAAAoN4VXGoMHz48HTt2zDe+8Y3ceeedWbVqVX3kAgAAAAAAqKXgUmPOnDm56aabUlJSkmOPPTZbbrllhgwZkocffrg+8gEAAAAAACRZj1KjWbNm+dKXvpTrr78+8+bNy9ixY/PKK6+kT58++dznPlcfGQEAAAAAAApfKPyDNtlkk5SXl+fdd9/Nq6++mmeffbaucgEAAAAAANRS8J0aSbJs2bJcf/316d+/f7baaqtccskl+fKXv5ynn366rvMBAAAAAAAkWY87NY477rhMmDAhm2yySY499ticc845KSsrq49sAAAAAAAANQouNZo2bZo//vGPKS8vT9OmTWvNPfXUU9ltt93qLBwAAAAAAMBqBZca119/fa33ixcvzo033pgrr7wy06dPz6pVq+osHAAAAAAAwGrrtaZGkkyePDkDBw7MlltumV/84hc5+OCDM3Xq1LrMBgAAAAAAUKOgOzUqKyszfvz4XHXVVVm0aFGOPfbYLF++PLfffnu6d+9eXxkBAAAAAADW/U6NI488MjvttFOeeOKJXHLJJXnzzTfzq1/9qj6zAQAAAAAA1FjnOzX+9re/5Tvf+U4GDx6cHXbYoT4zAQAAAAAArGGd79R46KGHsnjx4vTs2TO9e/fOZZddlrfffrs+swEAAAAAANRY51Jjn332yW9/+9vMmTMnp512Wm666aZ06dIlVVVVmThxYhYvXlyfOQEAAAAAgEZunUuN1Vq3bp2TTz45Dz30UJ588smcccYZ+elPf5qOHTvmqKOOqo+MAAAAAAAAhZcaH7TTTjvloosuyuuvv54bb7yxrjIBAAAAAACs4ROVGqs1bdo0xxxzTP7yl7/UxeEAAAAAAADWUCelBgAAAAAAQH1TagAAAAAAAEVBqQEAAAAAABQFpQYAAAAAAFAUlBoAAAAAAEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAQAAAAAAFAWlBgAAAAAAUBSUGgAAAAAAQFFQagAAAAAAAEVBqQEAAAAAABQFpQYAAAAAAFAUlBoAAAAAAEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAQAAAAAAFAWlBgAAAAAAUBSUGgAAAAAAQFFQagAAAAAAAEVBqQEAAAAAABQFpQYAAAAAAFAUlBoAAAAAAEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAQAAAAAAFAWlBgAAAAAAUBSUGgAAAAAAQFFQagAAAAAAAEVBqQEAAAAAABQFpQYAAAAAAFAUlBoAAAAAAEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAQAAAAAAFAWlBgAAAAAAUBSUGgAAAAAAQFFQagAAAAAAAEVBqQEAAAAAABQFpQYAAAAAAFAUlBoAAAAAAEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAQAAAAAAFAWlBgAAAAAAUBSUGgAAAAAAQFHYoEuNH//4xykpKan12nnnnWvm33vvvQwZMiSbb755Nt100wwYMCBz585twMQAAAAAAEB92aBLjSTZddddM2fOnJrXQw89VDM3fPjw3HHHHbn55pvz4IMP5s0338xXvvKVBkwLAABsKCZPnpwjjzwyXbp0SUlJSW6//fZa89XV1Tn33HOz5ZZbplWrVunbt29mzpxZa5v58+fn+OOPT9u2bdO+ffsMGjQoS5Ys+RTPAgAA+KANvtRo1qxZOnfuXPP6zGc+kyRZuHBhrrrqqowZMyYHH3xwevbsmauvvjoPP/xwpk6d+rHHXL58eRYtWlTrBQAAbFyWLl2aPfbYIxUVFR85f9FFF+XSSy/NuHHj8sgjj6R169YpLy/Pe++9V7PN8ccfn6effjoTJ07MhAkTMnny5Jx66qmf1ikAAAAfssGXGjNnzkyXLl2y3Xbb5fjjj8/s2bOTJNOnT8/KlSvTt2/fmm133nnnbL311pkyZcrHHnP06NFp165dzatr1671eg4AAMCnr1+/fjn//PPz5S9/eY256urqXHLJJTn77LNz9NFHp0ePHrn22mvz5ptv1tzR8eyzz+auu+7KlVdemd69e2f//ffPr371q9x000158803P+WzAQAAkg281Ojdu3fGjx+fu+66K1dccUVmzZqVL37xi1m8eHEqKyvTokWLtG/fvtY+nTp1SmVl5cced+TIkVm4cGHN67XXXqvHswAAADY0s2bNSmVlZa1fkmrXrl169+5d80tSU6ZMSfv27dOrV6+abfr27ZsmTZrkkUceWeux3RkOAAD1p1lDB/g4/fr1q/m5R48e6d27d7p165Y//vGPadWq1Xoft7S0NKWlpXUREQAAKEKrfxGqU6dOtcY/+EtSlZWV6dixY635Zs2apUOHDh/7i1SjR4/OT37ykzpODAAAJBv4nRof1r59++y444558cUX07lz56xYsSILFiyotc3cuXPTuXPnhgkIAAA0eu4MBwCA+lNUpcaSJUvy0ksvZcstt0zPnj3TvHnzTJo0qWb++eefz+zZs1NWVtaAKQEAgA3d6l+Emjt3bq3xD/6SVOfOnTNv3rxa8++//37mz5//sb9IVVpamrZt29Z6AQAAdWODLjXOPPPMPPjgg3nllVfy8MMP58tf/nKaNm2ar3/962nXrl0GDRqUESNG5P7778/06dNz0kknpaysLPvss09DRwcAADZg2267bTp37lzrl6QWLVqURx55pOaXpMrKyrJgwYJMnz69Zpv7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AEBRUGoAAAAAAABFQakBAAAAAAAUBaUGAAAAAABQFJQaAAAAAABAUVBqAAAAAAAARUGpAUC9Kykpye23397QMQAAgI2Q6w2AxkWpAcAnVllZmWHDhmW77bZLaWlpunbtmiOPPDKTJk2q88964IEHUlJSkgULFtT5sQEAgA2P6w0APqhZQwcAoLi98sor2W+//dK+ffv8/Oc/z+67756VK1fm7rvvzpAhQ/Lcc881dMSPVF1dnVWrVqVZM/8UAgDAhsr1BgAf5k4NAD6R//mf/0lJSUmmTZuWAQMGZMcdd8yuu+6aESNGZOrUqWts/1G/+TRjxoyUlJTklVdeSZK8+uqrOfLII7PZZpuldevW2XXXXXPnnXfmlVdeSZ8+fZIkm222WUpKSnLiiScmSaqqqjJ69Ohsu+22adWqVfbYY4/86U9/WuNz//a3v6Vnz54pLS3NQw89VG9/LgAAwCfnegOAD1MXA7De5s+fn7vuuisXXHBBWrduvcZ8+/bt1+u4Q4YMyYoVKzJ58uS0bt06zzzzTDbddNN07do1t9xySwYMGJDnn38+bdu2TatWrZIko0ePznXXXZdx48Zlhx12yOTJk/PNb34zW2yxRQ488MCaY5911ln5xS9+ke222y6bbbbZeuUDAADqn+sNAD6KUgOA9fbiiy+muro6O++8c50ed/bs2RkwYEB23333JMl2221XM9ehQ4ckSceOHWsuYpYvX54LL7ww9957b8rKymr2eeihh/LrX/+61kXGqFGjcuihh9ZpXgAAoO653gDgoyg1AFhv1dXV9XLc73znOxk8eHDuueee9O3bNwMGDEiPHj3Wuv2LL76YZcuWrXHxsGLFiuy11161xnr16lUvmQEAgLrlegOAj6LUAGC97bDDDikpKSlocb4mTf6znNMHL1BWrlxZa5v//u//Tnl5ef7617/mnnvuyejRo3PxxRdn2LBhH3nMJUuWJEn++te/Zquttqo1V1paWuv9R922DgAAbHhcbwDwUSwUDsB669ChQ8rLy1NRUZGlS5euMf/BxflW22KLLZIkc+bMqRmbMWPGGtt17do13/72t3PrrbfmjDPOyG9/+9skSYsWLZIkq1atqtm2e/fuKS0tzezZs7P99tvXenXt2vWTnCIAANBAXG8A8FGUGgB8IhUVFVm1alW+8IUv5JZbbsnMmTPz7LPP5tJLL6153uwHrf4f/x//+MeZOXNm/vrXv+biiy+utc3pp5+eu+++O7Nmzcrjjz+e+++/P7vsskuSpFu3bikpKcmECRPy1ltvZcmSJWnTpk3OPPPMDB8+PNdcc01eeumlPP744/nVr36Va6655lP5cwAAAOqe6w0APkypAcAnst122+Xxxx9Pnz59csYZZ2S33XbLoYcemkmTJuWKK65YY/vmzZvnxhtvzHPPPZcePXrkZz/7Wc4///xa26xatSpDhgzJLrvsksMPPzw77rhjLr/88iTJVlttlZ/85Cc566yz0qlTpwwdOjRJct555+Wcc87J6NGja/b761//mm233bb+/xAAAIB64XoDgA8rqa6vVZcAAAAAAADqkDs1AAAAAACAoqDUAAAAAAAAioJSAwAAAAAAKApKDQAAAAAAoCgoNQAAAAAAgKKg1AAAAAAAAIqCUgMAAAAAACgKSg0AAAAAAKAoKDUAAAAAAICioNQAAAAAAACKglIDAAAAAAAoCv8f6AbZrkso+WoAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load your dataset\n","file_path = '/content/drive/MyDrive/BDM Capstone/loyalty_clusters.csv'\n","loyalty_clusters = pd.read_csv(file_path)"],"metadata":{"id":"JIffNIfCOxcX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["frequency_thresholds_refined = {\n","    \"high\": loyalty_clusters[\"Frequency\"].quantile(0.65),\n","    \"medium\": loyalty_clusters[\"Frequency\"].quantile(0.35),\n","}\n","\n","def refined_frequency_points(frequency):\n","    if frequency > frequency_thresholds_refined[\"high\"]:\n","        return 10\n","    elif frequency > frequency_thresholds_refined[\"medium\"]:\n","        return 6\n","    else:\n","        return 3\n","\n","loyalty_clusters[\"FrequencyPointsRefined\"] = loyalty_clusters[\"Frequency\"].apply(refined_frequency_points)\n","\n","loyalty_clusters[\"ProfitPointsRefined\"] = (loyalty_clusters[\"Profit\"] // 150).astype(int)\n","\n","loyalty_clusters[\"LongevityPointsRefined\"] = (loyalty_clusters[\"Longevity\"] // 75).astype(int)\n","\n","loyalty_clusters[\"TotalPointsRefined\"] = (\n","    loyalty_clusters[\"FrequencyPointsRefined\"]\n","    + loyalty_clusters[\"ProfitPointsRefined\"]\n","    + loyalty_clusters[\"LongevityPointsRefined\"]\n",")\n","\n","loyalty_clusters[\"NewGroupRefined\"] = pd.qcut(\n","    loyalty_clusters[\"TotalPointsRefined\"],\n","    q=[0, 0.06, 0.50, 1.0],\n","    labels=[\"Platinum\", \"Gold\", \"Silver\"]\n",")\n","\n","original_distribution = loyalty_clusters[\"Cluster\"].value_counts(normalize=True)\n","new_distribution = loyalty_clusters[\"NewGroupRefined\"].value_counts(normalize=True)\n","\n","print(\"Original Cluster Distribution:\")\n","print(original_distribution)\n","\n","print(\"\\nNew Group Distribution (Refined Schema):\")\n","print(new_distribution)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DE04Yru_Oo5Q","executionInfo":{"status":"ok","timestamp":1733056852497,"user_tz":-330,"elapsed":399,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"77f71ca4-a7ef-4dd6-aaed-407ef7645592"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original Cluster Distribution:\n","Cluster\n","0    0.493545\n","2    0.445879\n","1    0.060576\n","Name: proportion, dtype: float64\n","\n","New Group Distribution (Refined Schema):\n","NewGroupRefined\n","Silver      0.495531\n","Gold        0.431976\n","Platinum    0.072493\n","Name: proportion, dtype: float64\n"]}]},{"cell_type":"markdown","source":["# New Cluster Allotment"],"metadata":{"id":"Qdd-VH3Xst43"}},{"cell_type":"code","source":["import pandas as pd\n","loyalty_data = pd.read_csv('/content/drive/MyDrive/BDM Capstone/loyalty_clusters.csv')\n","\n","# Calculate frequency-based points\n","frequency_thresholds = [\n","    loyalty_data['Frequency'].quantile(0.65),  # Medium Frequency upper limit\n","    loyalty_data['Frequency'].quantile(0.35),  # Low Frequency upper limit\n","]\n","\n","def calculate_frequency_points(freq):\n","    if freq > frequency_thresholds[0]:\n","        return 10  # High Frequency\n","    elif freq > frequency_thresholds[1]:\n","        return 6  # Medium Frequency\n","    else:\n","        return 3  # Low Frequency\n","\n","loyalty_data['Frequency Points'] = loyalty_data['Frequency'].apply(calculate_frequency_points)\n","\n","# Calculate profit-based points\n","loyalty_data['Profit Points'] = (loyalty_data['Profit'] // 150).astype(int)\n","\n","# Calculate longevity-based points\n","loyalty_data['Longevity Points'] = (loyalty_data['Longevity'] // 75).astype(int)\n","\n","# Calculate total points\n","loyalty_data['Loyalty Points'] = (\n","    loyalty_data['Frequency Points'] +\n","    loyalty_data['Profit Points'] +\n","    loyalty_data['Longevity Points']\n",")\n","\n","\n","# Calculate percentiles to determine thresholds for loyalty groups\n","platinum_threshold = loyalty_data['Loyalty Points'].quantile(0.94)  # Top 6%\n","gold_threshold = loyalty_data['Loyalty Points'].quantile(0.50)      # Next 44%\n","\n","# Assign loyalty groups\n","def assign_loyalty_group(points):\n","    if points > platinum_threshold:\n","        return 'Platinum'\n","    elif points > gold_threshold:\n","        return 'Gold'\n","    else:\n","        return 'Silver'\n","\n","# Apply the function to create a new loyalty group column\n","loyalty_data['New Loyalty Group'] = loyalty_data['Loyalty Points'].apply(assign_loyalty_group)\n","\n","# Display the updated data with loyalty groups\n","loyalty_data.head()"],"metadata":{"id":"1PCbzDLjPJvY","colab":{"base_uri":"https://localhost:8080/","height":223},"executionInfo":{"status":"ok","timestamp":1734960800366,"user_tz":-330,"elapsed":403,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"c823185c-6548-4a7a-8c33-3b412c0e9a62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerCode  Frequency       Profit  Longevity New customer Type  Cluster  \\\n","0         10014        5.0   43371.2156      231.0          EXISTING        1   \n","1         14110        4.0  100746.5318      311.0          EXISTING        1   \n","2         14408        7.0  191907.3188      332.0          EXISTING        1   \n","3         14415        3.0   36480.3059      160.0          EXISTING        2   \n","4         15342        4.0   46644.0516      286.0          EXISTING        1   \n","\n","   Frequency Points  Profit Points  Longevity Points  Loyalty Points  \\\n","0                10            289                 3             302   \n","1                10            671                 4             685   \n","2                10           1279                 4            1293   \n","3                10            243                 2             255   \n","4                10            310                 3             323   \n","\n","  New Loyalty Group  \n","0              Gold  \n","1          Platinum  \n","2          Platinum  \n","3              Gold  \n","4              Gold  "],"text/html":["\n","  <div id=\"df-3088c847-10ab-4b61-88de-45d074e40a76\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerCode</th>\n","      <th>Frequency</th>\n","      <th>Profit</th>\n","      <th>Longevity</th>\n","      <th>New customer Type</th>\n","      <th>Cluster</th>\n","      <th>Frequency Points</th>\n","      <th>Profit Points</th>\n","      <th>Longevity Points</th>\n","      <th>Loyalty Points</th>\n","      <th>New Loyalty Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10014</td>\n","      <td>5.0</td>\n","      <td>43371.2156</td>\n","      <td>231.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>289</td>\n","      <td>3</td>\n","      <td>302</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>14110</td>\n","      <td>4.0</td>\n","      <td>100746.5318</td>\n","      <td>311.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>671</td>\n","      <td>4</td>\n","      <td>685</td>\n","      <td>Platinum</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14408</td>\n","      <td>7.0</td>\n","      <td>191907.3188</td>\n","      <td>332.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>1279</td>\n","      <td>4</td>\n","      <td>1293</td>\n","      <td>Platinum</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14415</td>\n","      <td>3.0</td>\n","      <td>36480.3059</td>\n","      <td>160.0</td>\n","      <td>EXISTING</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>243</td>\n","      <td>2</td>\n","      <td>255</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15342</td>\n","      <td>4.0</td>\n","      <td>46644.0516</td>\n","      <td>286.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>310</td>\n","      <td>3</td>\n","      <td>323</td>\n","      <td>Gold</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3088c847-10ab-4b61-88de-45d074e40a76')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3088c847-10ab-4b61-88de-45d074e40a76 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3088c847-10ab-4b61-88de-45d074e40a76');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88d5d11d-dbfe-4f58-a68c-67c3c5dcd648\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88d5d11d-dbfe-4f58-a68c-67c3c5dcd648')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88d5d11d-dbfe-4f58-a68c-67c3c5dcd648 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loyalty_data","summary":"{\n  \"name\": \"loyalty_data\",\n  \"rows\": 1007,\n  \"fields\": [\n    {\n      \"column\": \"CustomerCode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 233166,\n        \"min\": 10014,\n        \"max\": 1381129,\n        \"num_unique_values\": 1007,\n        \"samples\": [\n          1357490,\n          1269646,\n          1286593\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2194943116400876,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.0,\n          5.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 60822.18819177087,\n        \"min\": -13634.7501,\n        \"max\": 1156023.517,\n        \"num_unique_values\": 845,\n        \"samples\": [\n          16169.4921,\n          5461.0164,\n          8755.9321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Longevity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65.12195153773266,\n        \"min\": 0.0,\n        \"max\": 358.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          11.0,\n          60.0,\n          238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New customer Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"NEW\",\n          \"EXISTING\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency Points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 3,\n        \"max\": 10,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit Points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 405,\n        \"min\": -91,\n        \"max\": 7706,\n        \"num_unique_values\": 305,\n        \"samples\": [\n          277,\n          315\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Longevity Points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loyalty Points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 407,\n        \"min\": -88,\n        \"max\": 7717,\n        \"num_unique_values\": 316,\n        \"samples\": [\n          64,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New Loyalty Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Gold\",\n          \"Platinum\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# loyalty_data.drop(columns=['Frequency Points', 'Profit Points', 'Longevity Points'], inplace=True)\n","loyalty_data['Original Loyalty Group'] = loyalty_data['Cluster'].map({1: 'Platinum', 2: 'Gold', 0: 'Silver'})\n","\n","loyalty_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"NBVXRTuGtI-W","executionInfo":{"status":"ok","timestamp":1734961076258,"user_tz":-330,"elapsed":420,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"b308488a-744c-47f2-dc95-7a11fb900c86"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerCode  Frequency       Profit  Longevity New customer Type  Cluster  \\\n","0         10014        5.0   43371.2156      231.0          EXISTING        1   \n","1         14110        4.0  100746.5318      311.0          EXISTING        1   \n","2         14408        7.0  191907.3188      332.0          EXISTING        1   \n","3         14415        3.0   36480.3059      160.0          EXISTING        2   \n","4         15342        4.0   46644.0516      286.0          EXISTING        1   \n","\n","   Loyalty Points New Loyalty Group Original Loyalty Group  \n","0             302              Gold               Platinum  \n","1             685          Platinum               Platinum  \n","2            1293          Platinum               Platinum  \n","3             255              Gold                   Gold  \n","4             323              Gold               Platinum  "],"text/html":["\n","  <div id=\"df-23301177-0c1a-4245-9090-e32aa79a488a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerCode</th>\n","      <th>Frequency</th>\n","      <th>Profit</th>\n","      <th>Longevity</th>\n","      <th>New customer Type</th>\n","      <th>Cluster</th>\n","      <th>Loyalty Points</th>\n","      <th>New Loyalty Group</th>\n","      <th>Original Loyalty Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10014</td>\n","      <td>5.0</td>\n","      <td>43371.2156</td>\n","      <td>231.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>302</td>\n","      <td>Gold</td>\n","      <td>Platinum</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>14110</td>\n","      <td>4.0</td>\n","      <td>100746.5318</td>\n","      <td>311.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>685</td>\n","      <td>Platinum</td>\n","      <td>Platinum</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14408</td>\n","      <td>7.0</td>\n","      <td>191907.3188</td>\n","      <td>332.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>1293</td>\n","      <td>Platinum</td>\n","      <td>Platinum</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14415</td>\n","      <td>3.0</td>\n","      <td>36480.3059</td>\n","      <td>160.0</td>\n","      <td>EXISTING</td>\n","      <td>2</td>\n","      <td>255</td>\n","      <td>Gold</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15342</td>\n","      <td>4.0</td>\n","      <td>46644.0516</td>\n","      <td>286.0</td>\n","      <td>EXISTING</td>\n","      <td>1</td>\n","      <td>323</td>\n","      <td>Gold</td>\n","      <td>Platinum</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23301177-0c1a-4245-9090-e32aa79a488a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-23301177-0c1a-4245-9090-e32aa79a488a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-23301177-0c1a-4245-9090-e32aa79a488a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6f2688f0-e801-4a66-8a9a-d2a598583152\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f2688f0-e801-4a66-8a9a-d2a598583152')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6f2688f0-e801-4a66-8a9a-d2a598583152 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"loyalty_data","summary":"{\n  \"name\": \"loyalty_data\",\n  \"rows\": 1007,\n  \"fields\": [\n    {\n      \"column\": \"CustomerCode\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 233166,\n        \"min\": 10014,\n        \"max\": 1381129,\n        \"num_unique_values\": 1007,\n        \"samples\": [\n          1357490,\n          1269646,\n          1286593\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2194943116400876,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.0,\n          5.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 60822.18819177087,\n        \"min\": -13634.7501,\n        \"max\": 1156023.517,\n        \"num_unique_values\": 845,\n        \"samples\": [\n          16169.4921,\n          5461.0164,\n          8755.9321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Longevity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65.12195153773266,\n        \"min\": 0.0,\n        \"max\": 358.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          11.0,\n          60.0,\n          238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New customer Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"NEW\",\n          \"EXISTING\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loyalty Points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 407,\n        \"min\": -88,\n        \"max\": 7717,\n        \"num_unique_values\": 316,\n        \"samples\": [\n          64,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"New Loyalty Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Gold\",\n          \"Platinum\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Original Loyalty Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Platinum\",\n          \"Gold\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Save the updated DataFrame to a CSV file\n","loyalty_data.to_csv('/content/drive/MyDrive/BDM Capstone/updated_loyalty_clusters.csv', index=False)"],"metadata":{"id":"f0FOF9Gaug9R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Algorithm Hunting"],"metadata":{"id":"UxFhnBCgycPz"}},{"cell_type":"code","source":["import numpy as np\n","from scipy.optimize import minimize\n","\n","# Loyalty points and original groups\n","loyalty_points = np.array(loyalty_data['Loyalty Points'])  # Calculated loyalty points\n","original_groups = np.array(loyalty_data['Original Loyalty Group'])  # Original group labels (Platinum, Gold, Silver)\n","\n","# Function to calculate misclassification error\n","def error_function(thresholds):\n","    T1, T2 = thresholds\n","    predicted_groups = np.where(loyalty_points >= T2, 'Platinum',\n","                       np.where(loyalty_points >= T1, 'Gold', 'Silver'))\n","    return np.sum(predicted_groups != original_groups)\n","\n","# List to store errors and corresponding percentiles\n","error_min = np.inf\n","best_thresholds = None\n","\n","# Loop over all combinations of percentiles (from 1 to 99)\n","for p1 in range(1, 100):\n","    for p2 in range(p1+1, 100):  # Ensure p1 < p2\n","        # Calculate initial guess based on percentiles\n","        initial_guess = [np.percentile(loyalty_points, p1), np.percentile(loyalty_points, p2)]\n","\n","        # Minimize the error function\n","        result = minimize(error_function, initial_guess, bounds=[(min(loyalty_points), max(loyalty_points))]*2)\n","\n","        # Get the error for the current pair of percentiles\n","        T1_opt, T2_opt = result.x\n","        error = error_function([T1_opt, T2_opt])\n","\n","        # Store the result\n","        if error < error_min:\n","            error_min = error\n","            best_thresholds = [T1_opt, T2_opt]\n","            print(f'New Min error : {error}')\n","# Print the optimal percentiles and their corresponding error\n","print(f\"Optimal Thresholds: {best_thresholds}\")\n","print(f\"Minimum Error: {error_min}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I4COZgsRvbb8","executionInfo":{"status":"ok","timestamp":1734963359490,"user_tz":-330,"elapsed":84423,"user":{"displayName":"DEVANSH ARORA","userId":"00184471204744565741"}},"outputId":"b4b6807e-1011-42c4-9f5e-114ece931e2b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["New Min error : 912\n","New Min error : 910\n","New Min error : 908\n","New Min error : 907\n","New Min error : 899\n","New Min error : 897\n","New Min error : 894\n","New Min error : 890\n","New Min error : 885\n","New Min error : 883\n","New Min error : 881\n","New Min error : 876\n","New Min error : 872\n","New Min error : 869\n","New Min error : 865\n","New Min error : 860\n","New Min error : 857\n","New Min error : 853\n","New Min error : 850\n","New Min error : 844\n","New Min error : 841\n","New Min error : 834\n","New Min error : 833\n","New Min error : 832\n","New Min error : 829\n","New Min error : 827\n","New Min error : 822\n","New Min error : 817\n","New Min error : 814\n","New Min error : 812\n","New Min error : 811\n","New Min error : 806\n","New Min error : 798\n","New Min error : 795\n","New Min error : 788\n","New Min error : 782\n","New Min error : 775\n","New Min error : 771\n","New Min error : 766\n","New Min error : 763\n","New Min error : 761\n","New Min error : 757\n","New Min error : 753\n","New Min error : 746\n","New Min error : 741\n","New Min error : 736\n","New Min error : 734\n","New Min error : 728\n","New Min error : 724\n","New Min error : 717\n","New Min error : 711\n","New Min error : 701\n","New Min error : 698\n","New Min error : 694\n","New Min error : 689\n","New Min error : 679\n","New Min error : 673\n","New Min error : 669\n","New Min error : 663\n","New Min error : 654\n","New Min error : 648\n","New Min error : 640\n","New Min error : 634\n","New Min error : 625\n","New Min error : 618\n","New Min error : 612\n","New Min error : 607\n","New Min error : 601\n","New Min error : 592\n","New Min error : 586\n","New Min error : 579\n","New Min error : 572\n","New Min error : 562\n","New Min error : 554\n","New Min error : 545\n","New Min error : 537\n","New Min error : 531\n","New Min error : 522\n","New Min error : 514\n","New Min error : 512\n","New Min error : 507\n","New Min error : 502\n","New Min error : 500\n","New Min error : 494\n","New Min error : 486\n","New Min error : 484\n","New Min error : 479\n","New Min error : 474\n","New Min error : 472\n","New Min error : 470\n","New Min error : 468\n","New Min error : 463\n","New Min error : 458\n","New Min error : 456\n","New Min error : 455\n","New Min error : 453\n","New Min error : 452\n","New Min error : 450\n","New Min error : 448\n","New Min error : 443\n","New Min error : 441\n","New Min error : 439\n","New Min error : 437\n","New Min error : 436\n","New Min error : 434\n","New Min error : 432\n","New Min error : 431\n","New Min error : 429\n","New Min error : 428\n","New Min error : 426\n","New Min error : 425\n","New Min error : 420\n","New Min error : 418\n","New Min error : 416\n","New Min error : 414\n","New Min error : 412\n","New Min error : 410\n","New Min error : 406\n","New Min error : 404\n","New Min error : 400\n","New Min error : 398\n","New Min error : 394\n","New Min error : 392\n","New Min error : 389\n","New Min error : 387\n","New Min error : 385\n","New Min error : 383\n","New Min error : 380\n","New Min error : 378\n","New Min error : 373\n","New Min error : 371\n","New Min error : 370\n","New Min error : 365\n","New Min error : 363\n","New Min error : 359\n","New Min error : 357\n","New Min error : 356\n","New Min error : 354\n","New Min error : 352\n","New Min error : 347\n","New Min error : 345\n","New Min error : 343\n","New Min error : 340\n","New Min error : 338\n","New Min error : 336\n","New Min error : 333\n","New Min error : 331\n","New Min error : 330\n","New Min error : 329\n","New Min error : 327\n","New Min error : 325\n","New Min error : 324\n","New Min error : 322\n","New Min error : 318\n","New Min error : 316\n","Optimal Percentiles: [87.60000000000002, 506.39999999999986]\n","Minimum Error: 316\n"]}]}]}